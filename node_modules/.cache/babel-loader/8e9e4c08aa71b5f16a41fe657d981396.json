{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task3/src/screen/PostList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport SimpleWithIcon from \"../components/SimpleWithIcon\";\nimport Tabs from \"../components/Tabs\";\nimport { useSelector } from \"react-redux\";\nimport { postsSelector, userPostsSelector } from \"../store/modelDucks/PostSelectors\";\nimport { usersSelector } from \"../store/modelDucks/UserSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const posts = useSelector(postsSelector);\n  const users = useSelector(usersSelector);\n  const [postList, setPostList] = useState([]);\n  const userPosts = useSelector(state => userPostsSelector(state, userId));\n  const [tabIdx, setTabIdx] = useState(0);\n  const [tabs, setTabs] = useState([{\n    name: \"전체\",\n    current: true\n  }, {\n    name: \"완료\",\n    current: false\n  }, {\n    name: \"미완료\",\n    current: false\n  }]);\n  useEffect(() => {\n    console.log(\"##posts\", posts);\n    console.log(\"##userPosts\", userPosts);\n    console.log(\"##postList\", postList);\n  }, [postList]);\n  useLayoutEffect(() => {\n    setPostList(posts[userId - 1]);\n  }, [userId]);\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(posts[userId - 1]);\n        break;\n\n      case 1:\n        {\n          setPostList(posts[userId - 1].filter(item => item.completed));\n          break;\n        }\n\n      case 2:\n        setPostList(posts[userId - 1].filter(item => !item.completed));\n        break;\n    }\n\n    setTabs(prev => {\n      let temp = [...prev];\n      return temp.map((item, idx) => {\n        return { ...item,\n          current: idx === tabIdx ? true : false\n        };\n      });\n    });\n  }, [tabIdx]);\n\n  const handleClick = idx => {\n    setTabIdx(idx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: `Post-List of \"${users[Number(userId) - 1].name}\"`,\n      subtitle: `Number of Posts: ${postList.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      handleClick: handleClick,\n      tabs: tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleWithIcon, {\n      postList: postList,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostList, \"afgaD+GIK48dpXCMl/G51rTj40s=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","useParams","Header","SimpleWithIcon","Tabs","useSelector","postsSelector","userPostsSelector","usersSelector","PostList","userId","posts","users","postList","setPostList","userPosts","state","tabIdx","setTabIdx","tabs","setTabs","name","current","console","log","filter","item","completed","prev","temp","map","idx","handleClick","Number","length","width","height"],"sources":["/Users/developer/task/task3/src/screen/PostList.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Header from \"../components/Header\";\nimport SimpleWithIcon from \"../components/SimpleWithIcon\";\nimport Tabs from \"../components/Tabs\";\n\nimport { useSelector } from \"react-redux\";\nimport {\n  postsSelector,\n  userPostsSelector,\n} from \"../store/modelDucks/PostSelectors\";\nimport { usersSelector } from \"../store/modelDucks/UserSelectors\";\n\nconst PostList = () => {\n  const { userId } = useParams();\n  const posts = useSelector(postsSelector);\n  const users = useSelector(usersSelector);\n  const [postList, setPostList] = useState([]);\n  const userPosts = useSelector((state) => userPostsSelector(state, userId));\n  const [tabIdx, setTabIdx] = useState(0);\n  const [tabs, setTabs] = useState([\n    { name: \"전체\", current: true },\n    { name: \"완료\", current: false },\n    { name: \"미완료\", current: false },\n  ]);\n  useEffect(() => {\n    console.log(\"##posts\", posts);\n    console.log(\"##userPosts\", userPosts);\n    console.log(\"##postList\", postList);\n  }, [postList]);\n  useLayoutEffect(() => {\n    setPostList(posts[userId - 1]);\n  }, [userId]);\n\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(posts[userId - 1]);\n        break;\n      case 1: {\n        setPostList(posts[userId - 1].filter((item) => item.completed));\n        break;\n      }\n      case 2:\n        setPostList(posts[userId - 1].filter((item) => !item.completed));\n        break;\n    }\n    setTabs((prev) => {\n      let temp = [...prev];\n      return temp.map((item, idx) => {\n        return {\n          ...item,\n          current: idx === tabIdx ? true : false,\n        };\n      });\n    });\n  }, [tabIdx]);\n\n  const handleClick = (idx) => {\n    setTabIdx(idx);\n  };\n\n  return (\n    <>\n      {/* <Indicator /> */}\n      <Header\n        title={`Post-List of \"${users[Number(userId) - 1].name}\"`}\n        subtitle={`Number of Posts: ${postList.length}`}\n      />\n      <Tabs handleClick={handleClick} tabs={tabs} />\n      <div style={{ width: \"100%\", height: \"20px\" }}></div>\n      <SimpleWithIcon postList={postList} userId={userId} />\n    </>\n  );\n};\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
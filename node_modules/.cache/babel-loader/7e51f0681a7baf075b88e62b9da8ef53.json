{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { normalizeEntity, warnDeprecated, mapValues } from \"./utils\";\nimport { UPDATE, DELETE, FILTER, EXCLUDE, ORDER_BY } from \"./constants\";\n/**\n * This class is used to build and make queries to the database\n * and operating the resulting set (such as updating attributes\n * or deleting the records).\n *\n * The queries are built lazily. For example:\n *\n * ```javascript\n * const qs = Book.all()\n *     .filter(book => book.releaseYear > 1999)\n *     .orderBy('name');\n * ```\n *\n * Doesn't execute a query. The query is executed only when\n * you need information from the query result, such as {@link QuerySet#count},\n * {@link QuerySet#toRefArray}. After the query is executed, the resulting\n * set is cached in the QuerySet instance.\n *\n * QuerySet instances also return copies, so chaining filters doesn't\n * mutate the previous instances.\n */\n\nvar QuerySet = /*#__PURE__*/function () {\n  /**\n   * Creates a QuerySet. The constructor is mainly for internal use;\n   * You should access QuerySet instances from {@link Model}.\n   *\n   * @param  {Model} modelClass - the model class of objects in this QuerySet.\n   * @param  {any[]} clauses - query clauses needed to evaluate the set.\n   * @param {Object} [opts] - additional options\n   */\n  function QuerySet(modelClass, clauses, opts) {\n    Object.assign(this, {\n      modelClass: modelClass,\n      clauses: clauses || []\n    });\n    this._opts = opts;\n  }\n\n  QuerySet.addSharedMethod = function addSharedMethod(methodName) {\n    this.sharedMethods = this.sharedMethods.concat(methodName);\n  };\n\n  var _proto = QuerySet.prototype;\n\n  _proto._new = function _new(clauses, userOpts) {\n    var opts = _objectSpread(_objectSpread({}, this._opts), userOpts);\n\n    return new this.constructor(this.modelClass, clauses, opts);\n  };\n\n  _proto.toString = function toString() {\n    var _this = this;\n\n    this._evaluate();\n\n    var contents = this.rows.map(function (_ref) {\n      var id = _ref.id;\n      return _this.modelClass.withId(id).toString();\n    }).join(\"\\n    - \");\n    return \"QuerySet contents:\\n    - \".concat(contents);\n  }\n  /**\n   * Returns an array of the plain objects represented by the QuerySet.\n   * The plain objects are direct references to the store.\n   *\n   * @return {Object[]} references to the plain JS objects represented by\n   *                    the QuerySet\n   */\n  ;\n\n  _proto.toRefArray = function toRefArray() {\n    return this._evaluate();\n  }\n  /**\n   * Returns an array of {@link Model} instances represented by the QuerySet.\n   * @return {Model[]} model instances represented by the QuerySet\n   */\n  ;\n\n  _proto.toModelArray = function toModelArray() {\n    var ModelClass = this.modelClass;\n    return this._evaluate().map(function (props) {\n      return new ModelClass(props);\n    });\n  }\n  /**\n   * Returns the number of {@link Model} instances represented by the QuerySet.\n   *\n   * @return {number} length of the QuerySet\n   */\n  ;\n\n  _proto.count = function count() {\n    this._evaluate();\n\n    return this.rows.length;\n  }\n  /**\n   * Checks if the {@link QuerySet} instance has any records matching the query\n   * in the database.\n   *\n   * @return {Boolean} `true` if the {@link QuerySet} instance contains entities, else `false`.\n   */\n  ;\n\n  _proto.exists = function exists() {\n    return Boolean(this.count());\n  }\n  /**\n   * Returns the {@link Model} instance at index `index` in the {@link QuerySet} instance if\n   * `withRefs` flag is set to `false`, or a reference to the plain JavaScript\n   * object in the model state if `true`.\n   *\n   * @param  {number} index - index of the model instance to get\n   * @return {Model|undefined} a {@link Model} instance at index\n   *                           `index` in the {@link QuerySet} instance,\n   *                           or undefined if the index is out of bounds.\n   */\n  ;\n\n  _proto.at = function at(index) {\n    var ModelClass = this.modelClass;\n\n    var rows = this._evaluate();\n\n    if (index >= 0 && index < rows.length) {\n      return new ModelClass(rows[index]);\n    }\n\n    return undefined;\n  }\n  /**\n   * Returns the {@link Model} instance at index 0 in the {@link QuerySet} instance.\n   * @return {Model}\n   */\n  ;\n\n  _proto.first = function first() {\n    return this.at(0);\n  }\n  /**\n   * Returns the {@link Model} instance at index `QuerySet.count() - 1`\n   * @return {Model}\n   */\n  ;\n\n  _proto.last = function last() {\n    var rows = this._evaluate();\n\n    return this.at(rows.length - 1);\n  }\n  /**\n   * Returns a new {@link QuerySet} instance with the same entities.\n   * @return {QuerySet} a new QuerySet with the same entities.\n   */\n  ;\n\n  _proto.all = function all() {\n    return this._new(this.clauses);\n  }\n  /**\n   * Returns a new {@link QuerySet} instance with entities that match properties in `lookupObj`.\n   *\n   * @param  {Object} lookupObj - the properties to match objects with. Can also be a function.\n   *                              It works the same as [Lodash filter](https://lodash.com/docs/#filter).\n   * @return {QuerySet} a new {@link QuerySet} instance with objects that passed the filter.\n   */\n  ;\n\n  _proto.filter = function filter(lookupObj) {\n    /**\n     * allow foreign keys to be specified as model instances,\n     * transform model instances to their primary keys\n     */\n    var normalizedLookupObj = _typeof(lookupObj) === \"object\" ? mapValues(lookupObj, normalizeEntity) : lookupObj;\n    var filterDescriptor = {\n      type: FILTER,\n      payload: normalizedLookupObj\n    };\n    /**\n     * create a new QuerySet\n     * including only rows matching the lookupObj\n     */\n\n    return this._new(this.clauses.concat(filterDescriptor));\n  }\n  /**\n   * Returns a new {@link QuerySet} instance with entities that do not match\n   * properties in `lookupObj`.\n   *\n   * @param  {Object} lookupObj - the properties to unmatch objects with. Can also be a function.\n   *                              It works the same as [Lodash reject](https://lodash.com/docs/#reject).\n   * @return {QuerySet} a new {@link QuerySet} instance with objects that did not pass the filter.\n   */\n  ;\n\n  _proto.exclude = function exclude(lookupObj) {\n    /**\n     * allow foreign keys to be specified as model instances,\n     * transform model instances to their primary keys\n     */\n    var normalizedLookupObj = _typeof(lookupObj) === \"object\" ? mapValues(lookupObj, normalizeEntity) : lookupObj;\n    var excludeDescriptor = {\n      type: EXCLUDE,\n      payload: normalizedLookupObj\n    };\n    /**\n     * create a new QuerySet\n     * excluding all rows matching the lookupObj\n     */\n\n    return this._new(this.clauses.concat(excludeDescriptor));\n  }\n  /**\n   * Performs the actual database query.\n   * @private\n   * @return {Array} rows corresponding to the QuerySet's clauses\n   */\n  ;\n\n  _proto._evaluate = function _evaluate() {\n    if (typeof this.modelClass.session === \"undefined\") {\n      throw new Error([\"Tried to query the \".concat(this.modelClass.modelName, \" model's table without a session. \"), \"Create a session using `session = orm.session()` and use \", \"`session[\\\"\".concat(this.modelClass.modelName, \"\\\"]` for querying instead.\")].join(\"\"));\n    }\n\n    if (!this._evaluated) {\n      var _this$modelClass = this.modelClass,\n          session = _this$modelClass.session,\n          table = _this$modelClass.modelName;\n      var querySpec = {\n        table: table,\n        clauses: this.clauses\n      };\n      this.rows = session.query(querySpec).rows;\n      this._evaluated = true;\n    }\n\n    return this.rows;\n  }\n  /**\n   * Returns a new {@link QuerySet} instance with entities ordered by `iteratees` in ascending\n   * order, unless otherwise specified. Delegates to [Lodash orderBy](https://lodash.com/docs/#orderBy).\n   *\n   * @param  {string[]|Function[]} iteratees - an array where each item can be a string or a\n   *                                           function. If a string is supplied, it should\n   *                                           correspond to property on the entity that will\n   *                                           determine the order. If a function is supplied,\n   *                                           it should return the value to order by.\n   * @param {Array<Boolean|'asc'|'desc'>} [orders] - the sort orders of `iteratees`. If unspecified, all iteratees\n   *                               will be sorted in ascending order. `true` and `'asc'`\n   *                               correspond to ascending order, and `false` and `'desc'`\n   *                               to descending order.\n   * @return {QuerySet} a new {@link QuerySet} with objects ordered by `iteratees`.\n   */\n  ;\n\n  _proto.orderBy = function orderBy(iteratees, orders) {\n    var orderByDescriptor = {\n      type: ORDER_BY,\n      payload: [iteratees, orders]\n    };\n    /**\n     * create a new QuerySet\n     * sorting all rows according to the passed arguments\n     */\n\n    return this._new(this.clauses.concat(orderByDescriptor));\n  }\n  /**\n   * Records an update specified with `mergeObj` to all the objects\n   * in the {@link QuerySet} instance.\n   *\n   * @param  {Object} mergeObj - an object to merge with all the objects in this\n   *                             queryset.\n   * @return {undefined}\n   */\n  ;\n\n  _proto.update = function update(mergeObj) {\n    var _this$modelClass2 = this.modelClass,\n        session = _this$modelClass2.session,\n        table = _this$modelClass2.modelName;\n    session.applyUpdate({\n      action: UPDATE,\n      query: {\n        table: table,\n        clauses: this.clauses\n      },\n      payload: mergeObj\n    });\n    this._evaluated = false;\n  }\n  /**\n   * Records a deletion of all the objects in this {@link QuerySet} instance.\n   * @return {undefined}\n   */\n  ;\n\n  _proto[\"delete\"] = function _delete() {\n    var _this$modelClass3 = this.modelClass,\n        session = _this$modelClass3.session,\n        table = _this$modelClass3.modelName;\n    this.toModelArray().forEach(function (model) {\n      return model._onDelete();\n    } // eslint-disable-line no-underscore-dangle\n    );\n    session.applyUpdate({\n      action: DELETE,\n      query: {\n        table: table,\n        clauses: this.clauses\n      }\n    });\n    this._evaluated = false;\n  } // DEPRECATED AND REMOVED METHODS\n\n  /**\n   * @deprecated\n   * Use {@link QuerySet#toModelArray} or predicate functions that\n   * instantiate Models from refs, e.g. `new Model(ref)`.\n   */\n  ;\n  /**\n   * @deprecated\n   * Call {@link QuerySet#toModelArray} or {@link QuerySet#toRefArray} first to map.\n   */\n\n\n  _proto.map = function map() {\n    throw new Error(\"`QuerySet.prototype.map` has been removed. \" + \"Call `.toModelArray()` or `.toRefArray()` first to map.\");\n  }\n  /**\n   * @deprecated\n   * Call {@link QuerySet#toModelArray} or {@link QuerySet#toRefArray} first to iterate.\n   */\n  ;\n\n  _proto.forEach = function forEach() {\n    throw new Error(\"`QuerySet.prototype.forEach` has been removed. \" + \"Call `.toModelArray()` or `.toRefArray()` first to iterate.\");\n  };\n\n  _createClass(QuerySet, [{\n    key: \"withModels\",\n    get: function get() {\n      throw new Error(\"`QuerySet.prototype.withModels` has been removed. \" + \"Use `.toModelArray()` or predicate functions that \" + \"instantiate Models from refs, e.g. `new Model(ref)`.\");\n    }\n    /**\n     * @deprecated Query building operates on refs only now.\n     */\n\n  }, {\n    key: \"withRefs\",\n    get: function get() {\n      warnDeprecated(\"`QuerySet.prototype.withRefs` has been deprecated. \" + \"Query building operates on refs only now.\");\n      return undefined;\n    }\n  }]);\n\n  return QuerySet;\n}();\n\nQuerySet.sharedMethods = [\"count\", \"at\", \"all\", \"last\", \"first\", \"filter\", \"exclude\", \"orderBy\", \"update\", \"delete\"];\nexport default QuerySet;","map":{"version":3,"names":["_typeof","_defineProperty","_createClass","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","normalizeEntity","warnDeprecated","mapValues","UPDATE","DELETE","FILTER","EXCLUDE","ORDER_BY","QuerySet","modelClass","clauses","opts","assign","_opts","addSharedMethod","methodName","sharedMethods","concat","_proto","prototype","_new","userOpts","constructor","toString","_this","_evaluate","contents","rows","map","_ref","id","withId","join","toRefArray","toModelArray","ModelClass","props","count","exists","Boolean","at","index","undefined","first","last","all","lookupObj","normalizedLookupObj","filterDescriptor","type","payload","exclude","excludeDescriptor","session","Error","modelName","_evaluated","_this$modelClass","table","querySpec","query","orderBy","iteratees","orders","orderByDescriptor","update","mergeObj","_this$modelClass2","applyUpdate","action","_delete","_this$modelClass3","model","_onDelete","get"],"sources":["/Users/developer/task/task3/node_modules/redux-orm/es/QuerySet.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { normalizeEntity, warnDeprecated, mapValues } from \"./utils\";\nimport { UPDATE, DELETE, FILTER, EXCLUDE, ORDER_BY } from \"./constants\";\n/**\n * This class is used to build and make queries to the database\n * and operating the resulting set (such as updating attributes\n * or deleting the records).\n *\n * The queries are built lazily. For example:\n *\n * ```javascript\n * const qs = Book.all()\n *     .filter(book => book.releaseYear > 1999)\n *     .orderBy('name');\n * ```\n *\n * Doesn't execute a query. The query is executed only when\n * you need information from the query result, such as {@link QuerySet#count},\n * {@link QuerySet#toRefArray}. After the query is executed, the resulting\n * set is cached in the QuerySet instance.\n *\n * QuerySet instances also return copies, so chaining filters doesn't\n * mutate the previous instances.\n */\n\nvar QuerySet = /*#__PURE__*/function () {\n  /**\n   * Creates a QuerySet. The constructor is mainly for internal use;\n   * You should access QuerySet instances from {@link Model}.\n   *\n   * @param  {Model} modelClass - the model class of objects in this QuerySet.\n   * @param  {any[]} clauses - query clauses needed to evaluate the set.\n   * @param {Object} [opts] - additional options\n   */\n  function QuerySet(modelClass, clauses, opts) {\n    Object.assign(this, {\n      modelClass: modelClass,\n      clauses: clauses || []\n    });\n    this._opts = opts;\n  }\n\n  QuerySet.addSharedMethod = function addSharedMethod(methodName) {\n    this.sharedMethods = this.sharedMethods.concat(methodName);\n  };\n\n  var _proto = QuerySet.prototype;\n\n  _proto._new = function _new(clauses, userOpts) {\n    var opts = _objectSpread(_objectSpread({}, this._opts), userOpts);\n\n    return new this.constructor(this.modelClass, clauses, opts);\n  };\n\n  _proto.toString = function toString() {\n    var _this = this;\n\n    this._evaluate();\n\n    var contents = this.rows.map(function (_ref) {\n      var id = _ref.id;\n      return _this.modelClass.withId(id).toString();\n    }).join(\"\\n    - \");\n    return \"QuerySet contents:\\n    - \".concat(contents);\n  }\n  /**\n   * Returns an array of the plain objects represented by the QuerySet.\n   * The plain objects are direct references to the store.\n   *\n   * @return {Object[]} references to the plain JS objects represented by\n   *                    the QuerySet\n   */\n  ;\n\n  _proto.toRefArray = function toRefArray() {\n    return this._evaluate();\n  }\n  /**\n   * Returns an array of {@link Model} instances represented by the QuerySet.\n   * @return {Model[]} model instances represented by the QuerySet\n   */\n  ;\n\n  _proto.toModelArray = function toModelArray() {\n    var ModelClass = this.modelClass;\n    return this._evaluate().map(function (props) {\n      return new ModelClass(props);\n    });\n  }\n  /**\n   * Returns the number of {@link Model} instances represented by the QuerySet.\n   *\n   * @return {number} length of the QuerySet\n   */\n  ;\n\n  _proto.count = function count() {\n    this._evaluate();\n\n    return this.rows.length;\n  }\n  /**\n   * Checks if the {@link QuerySet} instance has any records matching the query\n   * in the database.\n   *\n   * @return {Boolean} `true` if the {@link QuerySet} instance contains entities, else `false`.\n   */\n  ;\n\n  _proto.exists = function exists() {\n    return Boolean(this.count());\n  }\n  /**\n   * Returns the {@link Model} instance at index `index` in the {@link QuerySet} instance if\n   * `withRefs` flag is set to `false`, or a reference to the plain JavaScript\n   * object in the model state if `true`.\n   *\n   * @param  {number} index - index of the model instance to get\n   * @return {Model|undefined} a {@link Model} instance at index\n   *                           `index` in the {@link QuerySet} instance,\n   *                           or undefined if the index is out of bounds.\n   */\n  ;\n\n  _proto.at = function at(index) {\n    var ModelClass = this.modelClass;\n\n    var rows = this._evaluate();\n\n    if (index >= 0 && index < rows.length) {\n      return new ModelClass(rows[index]);\n    }\n\n    return undefined;\n  }\n  /**\n   * Returns the {@link Model} instance at index 0 in the {@link QuerySet} instance.\n   * @return {Model}\n   */\n  ;\n\n  _proto.first = function first() {\n    return this.at(0);\n  }\n  /**\n   * Returns the {@link Model} instance at index `QuerySet.count() - 1`\n   * @return {Model}\n   */\n  ;\n\n  _proto.last = function last() {\n    var rows = this._evaluate();\n\n    return this.at(rows.length - 1);\n  }\n  /**\n   * Returns a new {@link QuerySet} instance with the same entities.\n   * @return {QuerySet} a new QuerySet with the same entities.\n   */\n  ;\n\n  _proto.all = function all() {\n    return this._new(this.clauses);\n  }\n  /**\n   * Returns a new {@link QuerySet} instance with entities that match properties in `lookupObj`.\n   *\n   * @param  {Object} lookupObj - the properties to match objects with. Can also be a function.\n   *                              It works the same as [Lodash filter](https://lodash.com/docs/#filter).\n   * @return {QuerySet} a new {@link QuerySet} instance with objects that passed the filter.\n   */\n  ;\n\n  _proto.filter = function filter(lookupObj) {\n    /**\n     * allow foreign keys to be specified as model instances,\n     * transform model instances to their primary keys\n     */\n    var normalizedLookupObj = _typeof(lookupObj) === \"object\" ? mapValues(lookupObj, normalizeEntity) : lookupObj;\n    var filterDescriptor = {\n      type: FILTER,\n      payload: normalizedLookupObj\n    };\n    /**\n     * create a new QuerySet\n     * including only rows matching the lookupObj\n     */\n\n    return this._new(this.clauses.concat(filterDescriptor));\n  }\n  /**\n   * Returns a new {@link QuerySet} instance with entities that do not match\n   * properties in `lookupObj`.\n   *\n   * @param  {Object} lookupObj - the properties to unmatch objects with. Can also be a function.\n   *                              It works the same as [Lodash reject](https://lodash.com/docs/#reject).\n   * @return {QuerySet} a new {@link QuerySet} instance with objects that did not pass the filter.\n   */\n  ;\n\n  _proto.exclude = function exclude(lookupObj) {\n    /**\n     * allow foreign keys to be specified as model instances,\n     * transform model instances to their primary keys\n     */\n    var normalizedLookupObj = _typeof(lookupObj) === \"object\" ? mapValues(lookupObj, normalizeEntity) : lookupObj;\n    var excludeDescriptor = {\n      type: EXCLUDE,\n      payload: normalizedLookupObj\n    };\n    /**\n     * create a new QuerySet\n     * excluding all rows matching the lookupObj\n     */\n\n    return this._new(this.clauses.concat(excludeDescriptor));\n  }\n  /**\n   * Performs the actual database query.\n   * @private\n   * @return {Array} rows corresponding to the QuerySet's clauses\n   */\n  ;\n\n  _proto._evaluate = function _evaluate() {\n    if (typeof this.modelClass.session === \"undefined\") {\n      throw new Error([\"Tried to query the \".concat(this.modelClass.modelName, \" model's table without a session. \"), \"Create a session using `session = orm.session()` and use \", \"`session[\\\"\".concat(this.modelClass.modelName, \"\\\"]` for querying instead.\")].join(\"\"));\n    }\n\n    if (!this._evaluated) {\n      var _this$modelClass = this.modelClass,\n          session = _this$modelClass.session,\n          table = _this$modelClass.modelName;\n      var querySpec = {\n        table: table,\n        clauses: this.clauses\n      };\n      this.rows = session.query(querySpec).rows;\n      this._evaluated = true;\n    }\n\n    return this.rows;\n  }\n  /**\n   * Returns a new {@link QuerySet} instance with entities ordered by `iteratees` in ascending\n   * order, unless otherwise specified. Delegates to [Lodash orderBy](https://lodash.com/docs/#orderBy).\n   *\n   * @param  {string[]|Function[]} iteratees - an array where each item can be a string or a\n   *                                           function. If a string is supplied, it should\n   *                                           correspond to property on the entity that will\n   *                                           determine the order. If a function is supplied,\n   *                                           it should return the value to order by.\n   * @param {Array<Boolean|'asc'|'desc'>} [orders] - the sort orders of `iteratees`. If unspecified, all iteratees\n   *                               will be sorted in ascending order. `true` and `'asc'`\n   *                               correspond to ascending order, and `false` and `'desc'`\n   *                               to descending order.\n   * @return {QuerySet} a new {@link QuerySet} with objects ordered by `iteratees`.\n   */\n  ;\n\n  _proto.orderBy = function orderBy(iteratees, orders) {\n    var orderByDescriptor = {\n      type: ORDER_BY,\n      payload: [iteratees, orders]\n    };\n    /**\n     * create a new QuerySet\n     * sorting all rows according to the passed arguments\n     */\n\n    return this._new(this.clauses.concat(orderByDescriptor));\n  }\n  /**\n   * Records an update specified with `mergeObj` to all the objects\n   * in the {@link QuerySet} instance.\n   *\n   * @param  {Object} mergeObj - an object to merge with all the objects in this\n   *                             queryset.\n   * @return {undefined}\n   */\n  ;\n\n  _proto.update = function update(mergeObj) {\n    var _this$modelClass2 = this.modelClass,\n        session = _this$modelClass2.session,\n        table = _this$modelClass2.modelName;\n    session.applyUpdate({\n      action: UPDATE,\n      query: {\n        table: table,\n        clauses: this.clauses\n      },\n      payload: mergeObj\n    });\n    this._evaluated = false;\n  }\n  /**\n   * Records a deletion of all the objects in this {@link QuerySet} instance.\n   * @return {undefined}\n   */\n  ;\n\n  _proto[\"delete\"] = function _delete() {\n    var _this$modelClass3 = this.modelClass,\n        session = _this$modelClass3.session,\n        table = _this$modelClass3.modelName;\n    this.toModelArray().forEach(function (model) {\n      return model._onDelete();\n    } // eslint-disable-line no-underscore-dangle\n    );\n    session.applyUpdate({\n      action: DELETE,\n      query: {\n        table: table,\n        clauses: this.clauses\n      }\n    });\n    this._evaluated = false;\n  } // DEPRECATED AND REMOVED METHODS\n\n  /**\n   * @deprecated\n   * Use {@link QuerySet#toModelArray} or predicate functions that\n   * instantiate Models from refs, e.g. `new Model(ref)`.\n   */\n  ;\n\n  /**\n   * @deprecated\n   * Call {@link QuerySet#toModelArray} or {@link QuerySet#toRefArray} first to map.\n   */\n  _proto.map = function map() {\n    throw new Error(\"`QuerySet.prototype.map` has been removed. \" + \"Call `.toModelArray()` or `.toRefArray()` first to map.\");\n  }\n  /**\n   * @deprecated\n   * Call {@link QuerySet#toModelArray} or {@link QuerySet#toRefArray} first to iterate.\n   */\n  ;\n\n  _proto.forEach = function forEach() {\n    throw new Error(\"`QuerySet.prototype.forEach` has been removed. \" + \"Call `.toModelArray()` or `.toRefArray()` first to iterate.\");\n  };\n\n  _createClass(QuerySet, [{\n    key: \"withModels\",\n    get: function get() {\n      throw new Error(\"`QuerySet.prototype.withModels` has been removed. \" + \"Use `.toModelArray()` or predicate functions that \" + \"instantiate Models from refs, e.g. `new Model(ref)`.\");\n    }\n    /**\n     * @deprecated Query building operates on refs only now.\n     */\n\n  }, {\n    key: \"withRefs\",\n    get: function get() {\n      warnDeprecated(\"`QuerySet.prototype.withRefs` has been deprecated. \" + \"Query building operates on refs only now.\");\n      return undefined;\n    }\n  }]);\n\n  return QuerySet;\n}();\n\nQuerySet.sharedMethods = [\"count\", \"at\", \"all\", \"last\", \"first\", \"filter\", \"exclude\", \"orderBy\", \"update\", \"delete\"];\nexport default QuerySet;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task3/src/screen/PostList.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport Header from \"../components/Header\";\nimport SimpleWithIcon from \"../components/SimpleWithIcon\";\nimport Tabs from \"../components/Tabs\";\nimport { atomIsLoaded } from \"../data/atoms\";\nimport { createPost } from \"../store/modelDucks/Post\";\nimport { postsSelector, userPostsSelector } from \"../store/modelDucks/PostSelectors\";\nimport { usersSelector } from \"../store/modelDucks/UserSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    userId\n  } = useParams();\n  const posts = useSelector(postsSelector);\n  const users = useSelector(usersSelector);\n  const userPosts = useSelector(state => userPostsSelector(state, userId));\n  const [postList, setPostList] = useState([]);\n  const [tabIdx, setTabIdx] = useState(0);\n  const [tabs, setTabs] = useState([{\n    name: \"전체\",\n    current: true\n  }, {\n    name: \"완료\",\n    current: false\n  }, {\n    name: \"미완료\",\n    current: false\n  }]);\n  const [isLoaded, setIsLoaded] = useRecoilState(atomIsLoaded);\n\n  const fetchPost = async () => {\n    try {\n      const postRes = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n      users.forEach(user => {\n        let i = 0;\n        postRes.data.forEach((post, idx) => {\n          if (post.userId === user.id) {\n            dispatch(createPost({\n              id: idx + 1,\n              userId: post.userId,\n              title: post.title,\n              completed: post.completed,\n              postId: i\n            }));\n            i++;\n          }\n        });\n      });\n      console.log(\"##fetchPost end\");\n      setIsLoaded(false);\n    } catch (e) {\n      console.log(\"##error\", e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  useLayoutEffect(() => {\n    if (isLoaded && posts && posts.length === 0) fetchPost();\n  }, [isLoaded]);\n  useLayoutEffect(() => {\n    setPostList(userPosts);\n  }, [posts]);\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(userPosts);\n        break;\n\n      case 1:\n        {\n          setPostList(userPosts.filter(item => item.completed));\n          break;\n        }\n\n      case 2:\n        setPostList(userPosts.filter(item => !item.completed));\n        break;\n    }\n\n    setTabs(prev => {\n      let temp = [...prev];\n      return temp.map((item, idx) => {\n        return { ...item,\n          current: idx === tabIdx ? true : false\n        };\n      });\n    });\n  }, [tabIdx]);\n\n  const handleClick = idx => {\n    setTabIdx(idx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: `Post-List of \"${users[Number(userId) - 1].name}\"`,\n      subtitle: `Number of Posts: ${postList.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      handleClick: handleClick,\n      tabs: tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleWithIcon, {\n      postList: postList,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostList, \"OdnMPQgQIjU7YG/oUcnhatbQCFU=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector, useSelector, useRecoilState];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["axios","React","useEffect","useLayoutEffect","useState","useDispatch","useSelector","useParams","useRecoilState","Header","SimpleWithIcon","Tabs","atomIsLoaded","createPost","postsSelector","userPostsSelector","usersSelector","PostList","dispatch","userId","posts","users","userPosts","state","postList","setPostList","tabIdx","setTabIdx","tabs","setTabs","name","current","isLoaded","setIsLoaded","fetchPost","postRes","get","forEach","user","i","data","post","idx","id","title","completed","postId","console","log","e","length","filter","item","prev","temp","map","handleClick","Number","width","height"],"sources":["/Users/developer/task/task3/src/screen/PostList.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport Header from \"../components/Header\";\nimport SimpleWithIcon from \"../components/SimpleWithIcon\";\nimport Tabs from \"../components/Tabs\";\nimport { atomIsLoaded } from \"../data/atoms\";\nimport { createPost } from \"../store/modelDucks/Post\";\nimport {\n  postsSelector,\n  userPostsSelector,\n} from \"../store/modelDucks/PostSelectors\";\nimport { usersSelector } from \"../store/modelDucks/UserSelectors\";\n\nconst PostList = () => {\n  const dispatch = useDispatch();\n  const { userId } = useParams();\n  const posts = useSelector(postsSelector);\n  const users = useSelector(usersSelector);\n  const userPosts = useSelector((state) => userPostsSelector(state, userId));\n  const [postList, setPostList] = useState([]);\n  const [tabIdx, setTabIdx] = useState(0);\n  const [tabs, setTabs] = useState([\n    { name: \"전체\", current: true },\n    { name: \"완료\", current: false },\n    { name: \"미완료\", current: false },\n  ]);\n  const [isLoaded, setIsLoaded] = useRecoilState(atomIsLoaded);\n\n  const fetchPost = async () => {\n    try {\n      const postRes = await axios.get(\n        \"https://jsonplaceholder.typicode.com/todos\"\n      );\n\n      users.forEach((user) => {\n        let i = 0;\n\n        postRes.data.forEach((post, idx) => {\n          if (post.userId === user.id) {\n            dispatch(\n              createPost({\n                id: idx + 1,\n                userId: post.userId,\n                title: post.title,\n                completed: post.completed,\n                postId: i,\n              })\n            );\n            i++;\n          }\n        });\n      });\n      console.log(\"##fetchPost end\");\n      setIsLoaded(false);\n    } catch (e) {\n      console.log(\"##error\", e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  useLayoutEffect(() => {\n    if (isLoaded && posts && posts.length === 0) fetchPost();\n  }, [isLoaded]);\n\n  useLayoutEffect(() => {\n    setPostList(userPosts);\n  }, [posts]);\n\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(userPosts);\n        break;\n      case 1: {\n        setPostList(userPosts.filter((item) => item.completed));\n        break;\n      }\n      case 2:\n        setPostList(userPosts.filter((item) => !item.completed));\n        break;\n    }\n    setTabs((prev) => {\n      let temp = [...prev];\n      return temp.map((item, idx) => {\n        return {\n          ...item,\n          current: idx === tabIdx ? true : false,\n        };\n      });\n    });\n  }, [tabIdx]);\n\n  const handleClick = (idx) => {\n    setTabIdx(idx);\n  };\n\n  return (\n    <>\n      {/* <Indicator /> */}\n      <Header\n        title={`Post-List of \"${users[Number(userId) - 1].name}\"`}\n        subtitle={`Number of Posts: ${postList.length}`}\n      />\n      <Tabs handleClick={handleClick} tabs={tabs} />\n      <div style={{ width: \"100%\", height: \"20px\" }}></div>\n      <SimpleWithIcon postList={postList} userId={userId} />\n    </>\n  );\n};\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
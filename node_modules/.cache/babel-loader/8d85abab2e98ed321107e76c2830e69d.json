{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\"; //import { reducer as currentUserReducer } from \"./ducks/currentUser\";\n\nimport axios from \"axios\";\nimport { createPost } from \"./modelDucks/Post\";\nimport { createUser } from \"./modelDucks/User\";\nimport { reducer as ormReducer } from \"./orm\";\nconst store = configureStore({\n  reducer: {\n    orm: ormReducer\n  }\n}); // add some initial fake data\n\nconst fetchUser = async () => {\n  try {\n    const userRes = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    const userList = userRes.data;\n    userList.forEach((user, idx) => {\n      store.dispatch(createUser({\n        id: idx + 1,\n        name: user.name,\n        username: user.username,\n        email: user.email,\n        address: user.address,\n        company: user.company,\n        phone: user.phone,\n        website: user.website\n      }));\n    });\n  } catch (e) {\n    console.log(\"##error\", e);\n  }\n};\n\nconst fetchPost = async () => {\n  try {\n    const postRes = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n    const postList = postRes.data;\n    postList.forEach((post, idx) => {\n      store.dispatch(createPost({\n        id: idx + 1,\n        userId: post.userId,\n        title: post.title,\n        completed: post.completed\n      }));\n    });\n  } catch (e) {\n    console.log(\"##error\", e);\n  }\n};\n\nconst init = () => {\n  fetchUser();\n  fetchPost();\n};\n\ninit();\nexport default store;","map":{"version":3,"names":["configureStore","axios","createPost","createUser","reducer","ormReducer","store","orm","fetchUser","userRes","get","userList","data","forEach","user","idx","dispatch","id","name","username","email","address","company","phone","website","e","console","log","fetchPost","postRes","postList","post","userId","title","completed","init"],"sources":["/Users/developer/task/task3/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n//import { reducer as currentUserReducer } from \"./ducks/currentUser\";\nimport axios from \"axios\";\nimport { createPost } from \"./modelDucks/Post\";\nimport { createUser } from \"./modelDucks/User\";\nimport { reducer as ormReducer } from \"./orm\";\n\nconst store = configureStore({\n  reducer: {\n    orm: ormReducer,\n  },\n});\n\n// add some initial fake data\nconst fetchUser = async () => {\n  try {\n    const userRes = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n    const userList = userRes.data;\n    userList.forEach((user, idx) => {\n      store.dispatch(\n        createUser({\n          id: idx + 1,\n          name: user.name,\n          username: user.username,\n          email: user.email,\n          address: user.address,\n          company: user.company,\n          phone: user.phone,\n          website: user.website,\n        })\n      );\n    });\n  } catch (e) {\n    console.log(\"##error\", e);\n  }\n};\n\nconst fetchPost = async () => {\n  try {\n    const postRes = await axios.get(\n      \"https://jsonplaceholder.typicode.com/todos\"\n    );\n    const postList = postRes.data;\n    postList.forEach((post, idx) => {\n      store.dispatch(\n        createPost({\n          id: idx + 1,\n          userId: post.userId,\n          title: post.title,\n          completed: post.completed,\n        })\n      );\n    });\n  } catch (e) {\n    console.log(\"##error\", e);\n  }\n};\n\nconst init = () => {\n  fetchUser();\n  fetchPost();\n};\n\ninit();\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAO,IAAIC,UAApB,QAAsC,OAAtC;AAEA,MAAMC,KAAK,GAAGN,cAAc,CAAC;EAC3BI,OAAO,EAAE;IACPG,GAAG,EAAEF;EADE;AADkB,CAAD,CAA5B,C,CAMA;;AACA,MAAMG,SAAS,GAAG,YAAY;EAC5B,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CACpB,4CADoB,CAAtB;IAGA,MAAMC,QAAQ,GAAGF,OAAO,CAACG,IAAzB;IACAD,QAAQ,CAACE,OAAT,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;MAC9BT,KAAK,CAACU,QAAN,CACEb,UAAU,CAAC;QACTc,EAAE,EAAEF,GAAG,GAAG,CADD;QAETG,IAAI,EAAEJ,IAAI,CAACI,IAFF;QAGTC,QAAQ,EAAEL,IAAI,CAACK,QAHN;QAITC,KAAK,EAAEN,IAAI,CAACM,KAJH;QAKTC,OAAO,EAAEP,IAAI,CAACO,OALL;QAMTC,OAAO,EAAER,IAAI,CAACQ,OANL;QAOTC,KAAK,EAAET,IAAI,CAACS,KAPH;QAQTC,OAAO,EAAEV,IAAI,CAACU;MARL,CAAD,CADZ;IAYD,CAbD;EAcD,CAnBD,CAmBE,OAAOC,CAAP,EAAU;IACVC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAvB;EACD;AACF,CAvBD;;AAyBA,MAAMG,SAAS,GAAG,YAAY;EAC5B,IAAI;IACF,MAAMC,OAAO,GAAG,MAAM5B,KAAK,CAACS,GAAN,CACpB,4CADoB,CAAtB;IAGA,MAAMoB,QAAQ,GAAGD,OAAO,CAACjB,IAAzB;IACAkB,QAAQ,CAACjB,OAAT,CAAiB,CAACkB,IAAD,EAAOhB,GAAP,KAAe;MAC9BT,KAAK,CAACU,QAAN,CACEd,UAAU,CAAC;QACTe,EAAE,EAAEF,GAAG,GAAG,CADD;QAETiB,MAAM,EAAED,IAAI,CAACC,MAFJ;QAGTC,KAAK,EAAEF,IAAI,CAACE,KAHH;QAITC,SAAS,EAAEH,IAAI,CAACG;MAJP,CAAD,CADZ;IAQD,CATD;EAUD,CAfD,CAeE,OAAOT,CAAP,EAAU;IACVC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAvB;EACD;AACF,CAnBD;;AAqBA,MAAMU,IAAI,GAAG,MAAM;EACjB3B,SAAS;EACToB,SAAS;AACV,CAHD;;AAKAO,IAAI;AACJ,eAAe7B,KAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport ops from \"immutable-ops\";\nimport { CREATE, UPDATE, DELETE, SUCCESS, STATE_FLAG } from \"../constants\";\nimport Table from \"./Table\";\nvar BASE_EMPTY_STATE = {};\nObject.defineProperty(BASE_EMPTY_STATE, STATE_FLAG, {\n  enumerable: true,\n  value: true\n});\n/** @private */\n\nfunction replaceTableState(tableName, newTableState, tx, state) {\n  var batchToken = tx.batchToken,\n      withMutations = tx.withMutations;\n\n  if (withMutations) {\n    state[tableName] = newTableState;\n    return state;\n  }\n\n  return ops.batch.set(batchToken, tableName, newTableState, state);\n}\n/** @private */\n\n\nfunction query(tables, querySpec, state) {\n  var tableName = querySpec.table,\n      clauses = querySpec.clauses;\n  var table = tables[tableName];\n  var rows = table.query(state[tableName], clauses);\n  return {\n    rows: rows\n  };\n}\n/** @private */\n\n\nfunction update(tables, updateSpec, tx, state) {\n  var action = updateSpec.action,\n      payload = updateSpec.payload;\n  var tableName;\n  var nextTableState;\n  var resultPayload;\n\n  if (action === CREATE) {\n    tableName = updateSpec.table;\n    var table = tables[tableName];\n    var currTableState = state[tableName];\n    var result = table.insert(tx, currTableState, payload);\n    nextTableState = result.state;\n    resultPayload = result.created;\n  } else {\n    var querySpec = updateSpec.query;\n    tableName = querySpec.table;\n\n    var _query = query(tables, querySpec, state),\n        rows = _query.rows;\n\n    var _table = tables[tableName];\n    var _currTableState = state[tableName];\n\n    if (action === UPDATE) {\n      nextTableState = _table.update(tx, _currTableState, rows, payload); // return updated rows\n\n      resultPayload = query(tables, querySpec, state).rows;\n    } else if (action === DELETE) {\n      nextTableState = _table[\"delete\"](tx, _currTableState, rows); // return original rows that we just deleted\n\n      resultPayload = rows;\n    } else {\n      throw new Error(\"Database received unknown update type: \".concat(action));\n    }\n  }\n\n  var nextDBState = replaceTableState(tableName, nextTableState, tx, state);\n  return {\n    status: SUCCESS,\n    state: nextDBState,\n    payload: resultPayload\n  };\n}\n/**\n * @memberof db\n * @param {Object} schemaSpec\n * @return Object database\n */\n\n\nexport function createDatabase(schemaSpec) {\n  var tableSpecs = schemaSpec.tables;\n  var tables = Object.entries(tableSpecs).reduce(function (map, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        tableName = _ref2[0],\n        tableSpec = _ref2[1];\n\n    return _objectSpread(_objectSpread({}, map), {}, _defineProperty({}, tableName, new Table(tableSpec)));\n  }, {});\n\n  var getEmptyState = function getEmptyState() {\n    return Object.entries(tables).reduce(function (map, _ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          tableName = _ref4[0],\n          table = _ref4[1];\n\n      return _objectSpread(_objectSpread({}, map), {}, _defineProperty({}, tableName, table.getEmptyState()));\n    }, BASE_EMPTY_STATE);\n  };\n\n  return {\n    getEmptyState: getEmptyState,\n    query: query.bind(null, tables),\n    update: update.bind(null, tables),\n    // Used to inspect the schema.\n    describe: function describe(tableName) {\n      return tables[tableName];\n    }\n  };\n}\nexport default createDatabase;","map":{"version":3,"names":["_defineProperty","_slicedToArray","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","ops","CREATE","UPDATE","DELETE","SUCCESS","STATE_FLAG","Table","BASE_EMPTY_STATE","value","replaceTableState","tableName","newTableState","tx","state","batchToken","withMutations","batch","set","query","tables","querySpec","table","clauses","rows","update","updateSpec","action","payload","nextTableState","resultPayload","currTableState","result","insert","created","_query","_table","_currTableState","Error","concat","nextDBState","status","createDatabase","schemaSpec","tableSpecs","entries","reduce","map","_ref","_ref2","tableSpec","getEmptyState","_ref3","_ref4","bind","describe"],"sources":["/Users/developer/task/task3/node_modules/redux-orm/es/db/Database.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ops from \"immutable-ops\";\nimport { CREATE, UPDATE, DELETE, SUCCESS, STATE_FLAG } from \"../constants\";\nimport Table from \"./Table\";\nvar BASE_EMPTY_STATE = {};\nObject.defineProperty(BASE_EMPTY_STATE, STATE_FLAG, {\n  enumerable: true,\n  value: true\n});\n/** @private */\n\nfunction replaceTableState(tableName, newTableState, tx, state) {\n  var batchToken = tx.batchToken,\n      withMutations = tx.withMutations;\n\n  if (withMutations) {\n    state[tableName] = newTableState;\n    return state;\n  }\n\n  return ops.batch.set(batchToken, tableName, newTableState, state);\n}\n/** @private */\n\n\nfunction query(tables, querySpec, state) {\n  var tableName = querySpec.table,\n      clauses = querySpec.clauses;\n  var table = tables[tableName];\n  var rows = table.query(state[tableName], clauses);\n  return {\n    rows: rows\n  };\n}\n/** @private */\n\n\nfunction update(tables, updateSpec, tx, state) {\n  var action = updateSpec.action,\n      payload = updateSpec.payload;\n  var tableName;\n  var nextTableState;\n  var resultPayload;\n\n  if (action === CREATE) {\n    tableName = updateSpec.table;\n    var table = tables[tableName];\n    var currTableState = state[tableName];\n    var result = table.insert(tx, currTableState, payload);\n    nextTableState = result.state;\n    resultPayload = result.created;\n  } else {\n    var querySpec = updateSpec.query;\n    tableName = querySpec.table;\n\n    var _query = query(tables, querySpec, state),\n        rows = _query.rows;\n\n    var _table = tables[tableName];\n    var _currTableState = state[tableName];\n\n    if (action === UPDATE) {\n      nextTableState = _table.update(tx, _currTableState, rows, payload); // return updated rows\n\n      resultPayload = query(tables, querySpec, state).rows;\n    } else if (action === DELETE) {\n      nextTableState = _table[\"delete\"](tx, _currTableState, rows); // return original rows that we just deleted\n\n      resultPayload = rows;\n    } else {\n      throw new Error(\"Database received unknown update type: \".concat(action));\n    }\n  }\n\n  var nextDBState = replaceTableState(tableName, nextTableState, tx, state);\n  return {\n    status: SUCCESS,\n    state: nextDBState,\n    payload: resultPayload\n  };\n}\n/**\n * @memberof db\n * @param {Object} schemaSpec\n * @return Object database\n */\n\n\nexport function createDatabase(schemaSpec) {\n  var tableSpecs = schemaSpec.tables;\n  var tables = Object.entries(tableSpecs).reduce(function (map, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        tableName = _ref2[0],\n        tableSpec = _ref2[1];\n\n    return _objectSpread(_objectSpread({}, map), {}, _defineProperty({}, tableName, new Table(tableSpec)));\n  }, {});\n\n  var getEmptyState = function getEmptyState() {\n    return Object.entries(tables).reduce(function (map, _ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          tableName = _ref4[0],\n          table = _ref4[1];\n\n      return _objectSpread(_objectSpread({}, map), {}, _defineProperty({}, tableName, table.getEmptyState()));\n    }, BASE_EMPTY_STATE);\n  };\n\n  return {\n    getEmptyState: getEmptyState,\n    query: query.bind(null, tables),\n    update: update.bind(null, tables),\n    // Used to inspect the schema.\n    describe: function describe(tableName) {\n      return tables[tableName];\n    }\n  };\n}\nexport default createDatabase;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
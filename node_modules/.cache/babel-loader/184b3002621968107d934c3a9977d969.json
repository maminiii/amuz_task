{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task3/src/screen/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GridList from \"../components/GridList\";\nimport Header from \"../components/Header\";\nimport Indicator from \"../components/Indicator\";\nimport { add } from \"../store/index\";\nimport { createUser } from \"../store/modelDucks/User\";\nimport { usersSelector } from \"../store/modelDucks/UserSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListItemsContainer = styled.ul`\n  padding: 0;\n`;\n_c = ListItemsContainer;\n\nconst MainPage = () => {\n  _s();\n\n  const users = useSelector(usersSelector);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    num\n  } = useSelector(state => state.numReducer);\n  const dispatch = useDispatch();\n\n  const onAdd = () => dispatch(add());\n\n  const fetchUser = async () => {\n    try {\n      const userRes = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n      let userList = userRes.data;\n      userList.forEach((user, idx) => {\n        dispatch(createUser({\n          id: idx + 1,\n          name: user.name,\n          username: user.username,\n          email: user.email,\n          address: user.address,\n          company: user.company,\n          phone: user.phone,\n          website: user.website\n        }));\n      });\n      console.log(\"##fetchUser end\");\n    } catch (e) {\n      console.log(\"##error\", e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  useLayoutEffect(() => {\n    if (isLoaded && users && users.length === 0) fetchUser();\n  }, [isLoaded]); // useLayoutEffect(() => {\n  //   if (users && users.length === 0) {\n  //     fetchUser();\n  //   }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Indicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onAdd,\n      children: num\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      title: \"User-List\",\n      subtitle: `Number of Users: ${users.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemsContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridList, {\n        people: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainPage, \"25G9qPX14hDEYqvLqd8FdpOOvWE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c2 = MainPage;\nexport default MainPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListItemsContainer\");\n$RefreshReg$(_c2, \"MainPage\");","map":{"version":3,"names":["React","useLayoutEffect","styled","axios","useDispatch","useSelector","GridList","Header","Indicator","add","createUser","usersSelector","ListItemsContainer","ul","MainPage","users","isLoaded","setIsLoaded","useState","num","state","numReducer","dispatch","onAdd","fetchUser","userRes","get","userList","data","forEach","user","idx","id","name","username","email","address","company","phone","website","console","log","e","length"],"sources":["/Users/developer/task/task3/src/screen/MainPage.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GridList from \"../components/GridList\";\nimport Header from \"../components/Header\";\nimport Indicator from \"../components/Indicator\";\nimport { add } from \"../store/index\";\nimport { createUser } from \"../store/modelDucks/User\";\nimport { usersSelector } from \"../store/modelDucks/UserSelectors\";\n\nconst ListItemsContainer = styled.ul`\n  padding: 0;\n`;\n\nconst MainPage = () => {\n  const users = useSelector(usersSelector);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const { num } = useSelector((state) => state.numReducer);\n  const dispatch = useDispatch();\n  const onAdd = () => dispatch(add());\n\n  const fetchUser = async () => {\n    try {\n      const userRes = await axios.get(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n      let userList = userRes.data;\n\n      userList.forEach((user, idx) => {\n        dispatch(\n          createUser({\n            id: idx + 1,\n            name: user.name,\n            username: user.username,\n            email: user.email,\n            address: user.address,\n            company: user.company,\n            phone: user.phone,\n            website: user.website,\n          })\n        );\n      });\n      console.log(\"##fetchUser end\");\n    } catch (e) {\n      console.log(\"##error\", e);\n    }\n  };\n  useLayoutEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  useLayoutEffect(() => {\n    if (isLoaded && users && users.length === 0) fetchUser();\n  }, [isLoaded]);\n  // useLayoutEffect(() => {\n  //   if (users && users.length === 0) {\n  //     fetchUser();\n  //   }\n\n  // }, []);\n  return (\n    <>\n      <Indicator />\n      <div onClick={onAdd}>{num}</div>\n      <Header\n        title={\"User-List\"}\n        subtitle={`Number of Users: ${users.length}`}\n      />\n      <ListItemsContainer>\n        <GridList people={users}></GridList>\n      </ListItemsContainer>\n    </>\n  );\n};\nexport default MainPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,mCAA9B;;;AAEA,MAAMC,kBAAkB,GAAGV,MAAM,CAACW,EAAG;AACrC;AACA,CAFA;KAAMD,kB;;AAIN,MAAME,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,KAAK,GAAGV,WAAW,CAACM,aAAD,CAAzB;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,KAAD,CAAxC;EAEA,MAAM;IAAEC;EAAF,IAAUd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,UAAlB,CAA3B;EACA,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;;EACA,MAAMmB,KAAK,GAAG,MAAMD,QAAQ,CAACb,GAAG,EAAJ,CAA5B;;EAEA,MAAMe,SAAS,GAAG,YAAY;IAC5B,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CACpB,4CADoB,CAAtB;MAGA,IAAIC,QAAQ,GAAGF,OAAO,CAACG,IAAvB;MAEAD,QAAQ,CAACE,OAAT,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;QAC9BT,QAAQ,CACNZ,UAAU,CAAC;UACTsB,EAAE,EAAED,GAAG,GAAG,CADD;UAETE,IAAI,EAAEH,IAAI,CAACG,IAFF;UAGTC,QAAQ,EAAEJ,IAAI,CAACI,QAHN;UAITC,KAAK,EAAEL,IAAI,CAACK,KAJH;UAKTC,OAAO,EAAEN,IAAI,CAACM,OALL;UAMTC,OAAO,EAAEP,IAAI,CAACO,OANL;UAOTC,KAAK,EAAER,IAAI,CAACQ,KAPH;UAQTC,OAAO,EAAET,IAAI,CAACS;QARL,CAAD,CADJ,CAAR;MAYD,CAbD;MAcAC,OAAO,CAACC,GAAR,CAAY,iBAAZ;IACD,CArBD,CAqBE,OAAOC,CAAP,EAAU;MACVF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,CAAvB;IACD;EACF,CAzBD;;EA0BAzC,eAAe,CAAC,MAAM;IACpBgB,WAAW,CAAC,IAAD,CAAX;EACD,CAFc,EAEZ,EAFY,CAAf;EAGAhB,eAAe,CAAC,MAAM;IACpB,IAAIe,QAAQ,IAAID,KAAZ,IAAqBA,KAAK,CAAC4B,MAAN,KAAiB,CAA1C,EAA6CnB,SAAS;EACvD,CAFc,EAEZ,CAACR,QAAD,CAFY,CAAf,CArCqB,CAwCrB;EACA;EACA;EACA;EAEA;;EACA,oBACE;IAAA,wBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,OAAO,EAAEO,KAAd;MAAA,UAAsBJ;IAAtB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MACE,KAAK,EAAE,WADT;MAEE,QAAQ,EAAG,oBAAmBJ,KAAK,CAAC4B,MAAO;IAF7C;MAAA;MAAA;MAAA;IAAA,QAHF,eAOE,QAAC,kBAAD;MAAA,uBACE,QAAC,QAAD;QAAU,MAAM,EAAE5B;MAAlB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAaD,CA3DD;;GAAMD,Q;UACUT,W,EAGEA,W,EACCD,W;;;MALbU,Q;AA4DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
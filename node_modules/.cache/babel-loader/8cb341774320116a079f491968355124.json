{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/hello/src/PostList.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { atomUserList, atomPostList } from \"./MainPage\";\nimport { useRecoilValue } from \"recoil\";\nimport ListItemCard from \"./ListItemCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Title = styled.p`\n    text-align: center;\n    color: blue;\n`;\nconst SubTitle = styled.p`\n    text-align: right;\n    color: gray;\n    margin-bottom: 20px;\n`;\nconst PostContainer = styled.ul`\n    border: 1px solid red;\n`;\n\nconst PostList = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const postTotalList = useRecoilValue(atomPostList);\n  const [postList, setPostList] = useState([]);\n  const [tabIdx, setTabIdx] = useState(0);\n  const buttonList = [\"all\", \"completed\", \"incompleted\"];\n  useLayoutEffect(() => {\n    setPostList(postTotalList[userId - 1]);\n  }, [userId]);\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(postTotalList[userId - 1]);\n        break;\n\n      case 1:\n        {\n          setPostList(postTotalList[userId - 1].filter(item => item.completed));\n          break;\n        }\n\n      case 2:\n        setPostList(postTotalList[userId - 1].filter(item => !item.completed));\n        break;\n    }\n  }, [tabIdx]);\n\n  const handleClick = e => {\n    setTabIdx(Number(e.target.id));\n  };\n\n  useLayoutEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [buttonList.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        id: idx,\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n    }), postList.map(item => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/detailview/${userId}/${item.id}`,\n        style: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemCard, {\n          item: item,\n          type: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(PostList, \"u2uhvXpUqOlPuqVy6g+fB6PhauQ=\", false, function () {\n  return [useParams, useRecoilValue];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["styled","React","useEffect","useLayoutEffect","useState","useParams","Link","atomUserList","atomPostList","useRecoilValue","ListItemCard","Title","p","SubTitle","PostContainer","ul","PostList","userId","postTotalList","postList","setPostList","tabIdx","setTabIdx","buttonList","filter","item","completed","handleClick","e","Number","target","id","map","idx","textDecoration"],"sources":["/Users/developer/task/hello/src/PostList.js"],"sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { atomUserList, atomPostList } from \"./MainPage\";\nimport { useRecoilValue } from \"recoil\";\nimport ListItemCard from \"./ListItemCard\";\n\nconst Title = styled.p`\n    text-align: center;\n    color: blue;\n`;\n\nconst SubTitle = styled.p`\n    text-align: right;\n    color: gray;\n    margin-bottom: 20px;\n`;\n\nconst PostContainer = styled.ul`\n    border: 1px solid red;\n`;\n\nconst PostList = () => {\n    const { userId } = useParams();\n    const postTotalList = useRecoilValue(atomPostList);\n    const [postList, setPostList] = useState([]);\n    const [tabIdx, setTabIdx] = useState(0);\n    const buttonList = [\"all\", \"completed\", \"incompleted\"];\n    useLayoutEffect(() => {\n        setPostList(postTotalList[userId - 1]);\n    }, [userId]);\n\n    useEffect(() => {\n        switch (tabIdx) {\n            case 0:\n                setPostList(postTotalList[userId - 1]);\n                break;\n            case 1: {\n                setPostList(postTotalList[userId - 1].filter((item) => item.completed));\n                break;\n            }\n            case 2:\n                setPostList(postTotalList[userId - 1].filter((item) => !item.completed));\n                break;\n        }\n    }, [tabIdx]);\n\n    const handleClick = (e) => {\n        setTabIdx(Number(e.target.id));\n    };\n    useLayoutEffect(() => {}, []);\n    return (\n        <>\n            {buttonList.map((item, idx) => {\n                return (\n                    <button onClick={handleClick} id={idx}>\n                        {item}\n                    </button>\n                );\n            })}\n\n            {postList.map((item) => {\n                return (\n                    <Link\n                        to={`/detailview/${userId}/${item.id}`}\n                        style={{ textDecoration: \"none\" }}\n                    >\n                        <ListItemCard item={item} type=\"post\"></ListItemCard>\n                    </Link>\n                );\n            })}\n        </>\n    );\n};\nexport default PostList;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,eAA3B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,YAA3C;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,KAAK,GAAGX,MAAM,CAACY,CAAE;AACvB;AACA;AACA,CAHA;AAKA,MAAMC,QAAQ,GAAGb,MAAM,CAACY,CAAE;AAC1B;AACA;AACA;AACA,CAJA;AAMA,MAAME,aAAa,GAAGd,MAAM,CAACe,EAAG;AAChC;AACA,CAFA;;AAIA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAAaZ,SAAS,EAA5B;EACA,MAAMa,aAAa,GAAGT,cAAc,CAACD,YAAD,CAApC;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,CAAD,CAApC;EACA,MAAMmB,UAAU,GAAG,CAAC,KAAD,EAAQ,WAAR,EAAqB,aAArB,CAAnB;EACApB,eAAe,CAAC,MAAM;IAClBiB,WAAW,CAACF,aAAa,CAACD,MAAM,GAAG,CAAV,CAAd,CAAX;EACH,CAFc,EAEZ,CAACA,MAAD,CAFY,CAAf;EAIAf,SAAS,CAAC,MAAM;IACZ,QAAQmB,MAAR;MACI,KAAK,CAAL;QACID,WAAW,CAACF,aAAa,CAACD,MAAM,GAAG,CAAV,CAAd,CAAX;QACA;;MACJ,KAAK,CAAL;QAAQ;UACJG,WAAW,CAACF,aAAa,CAACD,MAAM,GAAG,CAAV,CAAb,CAA0BO,MAA1B,CAAkCC,IAAD,IAAUA,IAAI,CAACC,SAAhD,CAAD,CAAX;UACA;QACH;;MACD,KAAK,CAAL;QACIN,WAAW,CAACF,aAAa,CAACD,MAAM,GAAG,CAAV,CAAb,CAA0BO,MAA1B,CAAkCC,IAAD,IAAU,CAACA,IAAI,CAACC,SAAjD,CAAD,CAAX;QACA;IAVR;EAYH,CAbQ,EAaN,CAACL,MAAD,CAbM,CAAT;;EAeA,MAAMM,WAAW,GAAIC,CAAD,IAAO;IACvBN,SAAS,CAACO,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,CAAP,CAAT;EACH,CAFD;;EAGA5B,eAAe,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAf;EACA,oBACI;IAAA,WACKoB,UAAU,CAACS,GAAX,CAAe,CAACP,IAAD,EAAOQ,GAAP,KAAe;MAC3B,oBACI;QAAQ,OAAO,EAAEN,WAAjB;QAA8B,EAAE,EAAEM,GAAlC;QAAA,UACKR;MADL;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CANA,CADL,EASKN,QAAQ,CAACa,GAAT,CAAcP,IAAD,IAAU;MACpB,oBACI,QAAC,IAAD;QACI,EAAE,EAAG,eAAcR,MAAO,IAAGQ,IAAI,CAACM,EAAG,EADzC;QAEI,KAAK,EAAE;UAAEG,cAAc,EAAE;QAAlB,CAFX;QAAA,uBAII,QAAC,YAAD;UAAc,IAAI,EAAET,IAApB;UAA0B,IAAI,EAAC;QAA/B;UAAA;UAAA;UAAA;QAAA;MAJJ;QAAA;QAAA;QAAA;MAAA,QADJ;IAQH,CATA,CATL;EAAA,gBADJ;AAsBH,CAnDD;;GAAMT,Q;UACiBX,S,EACGI,c;;;KAFpBO,Q;AAoDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task/src/screen/PostList.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { atomPostList, atomUserList } from \"../data/atoms\";\nimport Indicator from \"../components/Indicator\";\nimport Header from \"../components/Header\";\nimport Tabs from \"../components/Tabs\";\nimport SimpleWithIcon from \"../components/SimpleWithIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const [posts, setPosts] = useRecoilState(atomPostList);\n  const userList = useRecoilValue(atomUserList);\n  const [postList, setPostList] = useState([]);\n  const [tabIdx, setTabIdx] = useState(0);\n  const [tabs, setTabs] = useState([{\n    name: \"전체\",\n    current: true\n  }, {\n    name: \"완료\",\n    current: false\n  }, {\n    name: \"미완료\",\n    current: false\n  }]);\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n      let postList = userList.map(userId => {\n        let newArr = [];\n        let i = 0;\n        res.data.forEach(item => {\n          if (item.userId === userId.id) {\n            newArr.push({\n              id: item.id,\n              postId: i,\n              title: item.title,\n              completed: item.completed\n            });\n            i++;\n          }\n        });\n        return newArr;\n      });\n      setPosts(postList);\n      sessionStorage.setItem(\"postList\", JSON.stringify(postList));\n      setIsLoaded(false);\n    } catch (e) {\n      console.log(\"##error\", e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    setIsLoaded(true);\n  }, [needUpdate]);\n  useLayoutEffect(() => {\n    if (isLoaded) fetchData(isLoaded);\n  }, [isLoaded]);\n  useLayoutEffect(() => {\n    setPostList(posts[userId - 1]);\n  }, [userId]);\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(posts[userId - 1]);\n        break;\n\n      case 1:\n        {\n          setPostList(posts[userId - 1].filter(item => item.completed));\n          break;\n        }\n\n      case 2:\n        setPostList(posts[userId - 1].filter(item => !item.completed));\n        break;\n    }\n\n    setTabs(prev => {\n      let temp = [...prev];\n      return temp.map((item, idx) => {\n        return { ...item,\n          current: idx === tabIdx ? true : false\n        };\n      });\n    });\n  }, [tabIdx]);\n\n  const handleClick = idx => {\n    setTabIdx(idx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Indicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      title: `Post-List of \"${userList[Number(userId) - 1].name}\"`,\n      subtitle: `Number of Posts: ${postList.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      handleClick: handleClick,\n      tabs: tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleWithIcon, {\n      postList: postList,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostList, \"ETcU5IHMlcdTGWDN91n0PXi3sAY=\", true, function () {\n  return [useParams, useRecoilValue];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["styled","React","useEffect","useLayoutEffect","useState","useParams","Link","useRecoilValue","atomPostList","atomUserList","Indicator","Header","Tabs","SimpleWithIcon","PostList","userId","posts","setPosts","useRecoilState","userList","postList","setPostList","tabIdx","setTabIdx","tabs","setTabs","name","current","fetchData","res","axios","get","map","newArr","i","data","forEach","item","id","push","postId","title","completed","sessionStorage","setItem","JSON","stringify","setIsLoaded","e","console","log","needUpdate","isLoaded","filter","prev","temp","idx","handleClick","Number","length","width","height"],"sources":["/Users/developer/task/task/src/screen/PostList.js"],"sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { atomPostList, atomUserList } from \"../data/atoms\";\n\nimport Indicator from \"../components/Indicator\";\nimport Header from \"../components/Header\";\nimport Tabs from \"../components/Tabs\";\nimport SimpleWithIcon from \"../components/SimpleWithIcon\";\n\nconst PostList = () => {\n    const { userId } = useParams();\n    const [posts, setPosts] = useRecoilState(atomPostList);\n    const userList = useRecoilValue(atomUserList);\n    const [postList, setPostList] = useState([]);\n    const [tabIdx, setTabIdx] = useState(0);\n    const [tabs, setTabs] = useState([\n        { name: \"전체\", current: true },\n        { name: \"완료\", current: false },\n        { name: \"미완료\", current: false },\n    ]);\n\n    const fetchData = async () => {\n        try {\n            const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n\n            let postList = userList.map((userId) => {\n                let newArr = [];\n                let i = 0;\n                res.data.forEach((item) => {\n                    if (item.userId === userId.id) {\n                        newArr.push({\n                            id: item.id,\n                            postId: i,\n                            title: item.title,\n                            completed: item.completed,\n                        });\n                        i++;\n                    }\n                });\n                return newArr;\n            });\n            setPosts(postList);\n            sessionStorage.setItem(\"postList\", JSON.stringify(postList));\n\n            setIsLoaded(false);\n        } catch (e) {\n            console.log(\"##error\", e);\n        }\n    };\n\n    useLayoutEffect(() => {\n        setIsLoaded(true);\n    }, [needUpdate]);\n\n    useLayoutEffect(() => {\n        if (isLoaded) fetchData(isLoaded);\n    }, [isLoaded]);\n\n    useLayoutEffect(() => {\n        setPostList(posts[userId - 1]);\n    }, [userId]);\n\n    useEffect(() => {\n        switch (tabIdx) {\n            case 0:\n                setPostList(posts[userId - 1]);\n                break;\n            case 1: {\n                setPostList(posts[userId - 1].filter((item) => item.completed));\n                break;\n            }\n            case 2:\n                setPostList(posts[userId - 1].filter((item) => !item.completed));\n                break;\n        }\n        setTabs((prev) => {\n            let temp = [...prev];\n            return temp.map((item, idx) => {\n                return {\n                    ...item,\n                    current: idx === tabIdx ? true : false,\n                };\n            });\n        });\n    }, [tabIdx]);\n\n    const handleClick = (idx) => {\n        setTabIdx(idx);\n    };\n\n    return (\n        <>\n            <Indicator />\n            <Header\n                title={`Post-List of \"${userList[Number(userId) - 1].name}\"`}\n                subtitle={`Number of Posts: ${postList.length}`}\n            />\n            <Tabs handleClick={handleClick} tabs={tabs} />\n            <div style={{ width: \"100%\", height: \"20px\" }}></div>\n            <SimpleWithIcon postList={postList} userId={userId} />\n        </>\n    );\n};\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
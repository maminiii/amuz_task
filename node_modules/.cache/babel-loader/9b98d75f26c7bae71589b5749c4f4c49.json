{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task/src/PostList.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { atomUserList, atomPostList } from \"./MainPage\";\nimport { useRecoilValue } from \"recoil\";\nimport ListItemCard from \"Users/developer/task/task/src/components/ListItemCard\";\nimport Header from \"./Header\";\nimport Tabs from \"./components/Tabs\";\nimport AvatarGroupsWithAction from \"./components/AvatarGroupsWithAction\";\nimport SimpleWithIcon from \"./components/SimpleWithIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FilterButton = styled.button`\n    border: none;\n    margin-right: 10px;\n    border-radius: 30px;\n    padding: 5px 8px;\n    box-sizing: border-box;\n    &.clicked {\n        background-color: pink;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        color: white;\n    }\n`;\n\nconst PostList = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const postTotalList = useRecoilValue(atomPostList);\n  const userList = useRecoilValue(atomUserList);\n  const [postList, setPostList] = useState([]);\n  const [tabIdx, setTabIdx] = useState(0);\n  const [tabs, setTabs] = useState([{\n    name: \"전체\",\n    current: true\n  }, {\n    name: \"완료\",\n    current: false\n  }, {\n    name: \"미완료\",\n    current: false\n  }]);\n  useLayoutEffect(() => {\n    setPostList(postTotalList[userId - 1]);\n  }, [userId]);\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(postTotalList[userId - 1]);\n        break;\n\n      case 1:\n        {\n          setPostList(postTotalList[userId - 1].filter(item => item.completed));\n          break;\n        }\n\n      case 2:\n        setPostList(postTotalList[userId - 1].filter(item => !item.completed));\n        break;\n    }\n\n    setTabs(prev => {\n      let temp = [...prev];\n      return temp.map((item, idx) => {\n        return { ...item,\n          current: idx === tabIdx ? true : false\n        };\n      });\n    });\n  }, [tabIdx]);\n\n  const handleClick = idx => {\n    setTabIdx(idx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: `Post-List of \"${userList[Number(userId) - 1].name}\"`,\n      subtitle: `Number of Posts: ${postList.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      handleClick: handleClick,\n      tabs: tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleWithIcon, {\n      postList: postList,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostList, \"89QBbySp171aVvR2vEUm+V6EArQ=\", false, function () {\n  return [useParams, useRecoilValue, useRecoilValue];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["styled","React","useEffect","useLayoutEffect","useState","useParams","Link","atomUserList","atomPostList","useRecoilValue","ListItemCard","Header","Tabs","AvatarGroupsWithAction","SimpleWithIcon","FilterButton","button","PostList","userId","postTotalList","userList","postList","setPostList","tabIdx","setTabIdx","tabs","setTabs","name","current","filter","item","completed","prev","temp","map","idx","handleClick","Number","length","width","height"],"sources":["/Users/developer/task/task/src/PostList.js"],"sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { atomUserList, atomPostList } from \"./MainPage\";\nimport { useRecoilValue } from \"recoil\";\nimport ListItemCard from \"Users/developer/task/task/src/components/ListItemCard\";\nimport Header from \"./Header\";\nimport Tabs from \"./components/Tabs\";\nimport AvatarGroupsWithAction from \"./components/AvatarGroupsWithAction\";\nimport SimpleWithIcon from \"./components/SimpleWithIcon\";\n\nconst FilterButton = styled.button`\n    border: none;\n    margin-right: 10px;\n    border-radius: 30px;\n    padding: 5px 8px;\n    box-sizing: border-box;\n    &.clicked {\n        background-color: pink;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        color: white;\n    }\n`;\n\nconst PostList = () => {\n    const { userId } = useParams();\n    const postTotalList = useRecoilValue(atomPostList);\n    const userList = useRecoilValue(atomUserList);\n    const [postList, setPostList] = useState([]);\n    const [tabIdx, setTabIdx] = useState(0);\n    const [tabs, setTabs] = useState([\n        { name: \"전체\", current: true },\n        { name: \"완료\", current: false },\n        { name: \"미완료\", current: false },\n    ]);\n    useLayoutEffect(() => {\n        setPostList(postTotalList[userId - 1]);\n    }, [userId]);\n\n    useEffect(() => {\n        switch (tabIdx) {\n            case 0:\n                setPostList(postTotalList[userId - 1]);\n                break;\n            case 1: {\n                setPostList(postTotalList[userId - 1].filter((item) => item.completed));\n                break;\n            }\n            case 2:\n                setPostList(postTotalList[userId - 1].filter((item) => !item.completed));\n                break;\n        }\n        setTabs((prev) => {\n            let temp = [...prev];\n            return temp.map((item, idx) => {\n                return {\n                    ...item,\n                    current: idx === tabIdx ? true : false,\n                };\n            });\n        });\n    }, [tabIdx]);\n\n    const handleClick = (idx) => {\n        setTabIdx(idx);\n    };\n\n    return (\n        <>\n            <Header\n                title={`Post-List of \"${userList[Number(userId) - 1].name}\"`}\n                subtitle={`Number of Posts: ${postList.length}`}\n            />\n            <Tabs handleClick={handleClick} tabs={tabs} />\n            <div style={{ width: \"100%\", height: \"20px\" }}></div>\n            <SimpleWithIcon postList={postList} userId={userId} />\n            {/* <AvatarGroupsWithAction postList={postList} userId={userId} /> */}\n            {/* {postList.map((item) => {\n                return (\n                    <Link\n                        to={`/postlist/${userId}/detailview/${item.id}`}\n                        key={item.id}\n                        style={{ textDecoration: \"none\" }}\n                    >\n                        <ListItemCard item={item} type=\"post\"></ListItemCard>\n                    </Link>\n                );\n            })} */}\n        </>\n    );\n};\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task3/src/components/Posts/UserDropdown.js\",\n    _s = $RefreshSig$();\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearUser, setUser } from \"../../store/ducks/currentUser\";\nimport { usersSelector } from \"../../store/modelDucks/UserSelectors\";\n/**\n * Has a dropdown for all current users and allows selecting the current user\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserDropdown() {\n  _s();\n\n  const dispatch = useDispatch();\n  const users = useSelector(state => usersSelector(state));\n  const currentUser = useSelector(state => state.currentUser);\n  useEffect(() => {\n    // when users load, set current user to the first if no user already set\n    if (users.length && currentUser === null) {\n      dispatch(setUser(users[0].id));\n    }\n  }, [users]); //eslint-disable-line\n\n  const handleChange = e => {\n    if (e.target.value === \"\") {\n      dispatch(clearUser());\n    } else {\n      dispatch(setUser(e.target.value));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Current user:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: currentUser !== null ? currentUser : \"\",\n      onChange: handleChange,\n      displayEmpty: true,\n      style: {\n        marginBottom: \"0.8em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"No user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: user.id,\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserDropdown, \"hdG8BwMfDgFts+6A8SNpKqCTRgg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDropdown\");","map":{"version":3,"names":["MenuItem","Select","React","useEffect","useDispatch","useSelector","clearUser","setUser","usersSelector","UserDropdown","dispatch","users","state","currentUser","length","id","handleChange","e","target","value","marginBottom","map","user","name"],"sources":["/Users/developer/task/task3/src/components/Posts/UserDropdown.js"],"sourcesContent":["import MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearUser, setUser } from \"../../store/ducks/currentUser\";\nimport { usersSelector } from \"../../store/modelDucks/UserSelectors\";\n\n/**\n * Has a dropdown for all current users and allows selecting the current user\n */\nexport default function UserDropdown() {\n  const dispatch = useDispatch();\n  const users = useSelector((state) => usersSelector(state));\n  const currentUser = useSelector((state) => state.currentUser);\n\n  useEffect(() => {\n    // when users load, set current user to the first if no user already set\n    if (users.length && currentUser === null) {\n      dispatch(setUser(users[0].id));\n    }\n  }, [users]); //eslint-disable-line\n\n  const handleChange = (e) => {\n    if (e.target.value === \"\") {\n      dispatch(clearUser());\n    } else {\n      dispatch(setUser(e.target.value));\n    }\n  };\n\n  return (\n    <>\n      <div>Current user:</div>\n      <Select\n        value={currentUser !== null ? currentUser : \"\"}\n        onChange={handleChange}\n        displayEmpty\n        style={{ marginBottom: \"0.8em\" }}\n      >\n        <MenuItem value={\"\"}>\n          <em>No user</em>\n        </MenuItem>\n        {users.map((user) => (\n          <MenuItem key={user.id} value={user.id}>\n            {user.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,+BAAnC;AACA,SAASC,aAAT,QAA8B,sCAA9B;AAEA;AACA;AACA;;;;AACA,eAAe,SAASC,YAAT,GAAwB;EAAA;;EACrC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWJ,aAAa,CAACI,KAAD,CAAzB,CAAzB;EACA,MAAMC,WAAW,GAAGR,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA/B;EAEAV,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,KAAK,CAACG,MAAN,IAAgBD,WAAW,KAAK,IAApC,EAA0C;MACxCH,QAAQ,CAACH,OAAO,CAACI,KAAK,CAAC,CAAD,CAAL,CAASI,EAAV,CAAR,CAAR;IACD;EACF,CALQ,EAKN,CAACJ,KAAD,CALM,CAAT,CALqC,CAUxB;;EAEb,MAAMK,YAAY,GAAIC,CAAD,IAAO;IAC1B,IAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;MACzBT,QAAQ,CAACJ,SAAS,EAAV,CAAR;IACD,CAFD,MAEO;MACLI,QAAQ,CAACH,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CAAR;IACD;EACF,CAND;;EAQA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MACE,KAAK,EAAEN,WAAW,KAAK,IAAhB,GAAuBA,WAAvB,GAAqC,EAD9C;MAEE,QAAQ,EAAEG,YAFZ;MAGE,YAAY,MAHd;MAIE,KAAK,EAAE;QAAEI,YAAY,EAAE;MAAhB,CAJT;MAAA,wBAME,QAAC,QAAD;QAAU,KAAK,EAAE,EAAjB;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF,EASGT,KAAK,CAACU,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;QAAwB,KAAK,EAAEA,IAAI,CAACP,EAApC;QAAA,UACGO,IAAI,CAACC;MADR,GAAeD,IAAI,CAACP,EAApB;QAAA;QAAA;QAAA;MAAA,QADD,CATH;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAoBD;;GAxCuBN,Y;UACLL,W,EACHC,W,EACMA,W;;;KAHEI,Y"},"metadata":{},"sourceType":"module"}
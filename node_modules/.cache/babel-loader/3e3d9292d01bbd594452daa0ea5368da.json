{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task3/src/components/Posts/PostInput.js\",\n    _s = $RefreshSig$();\n\n//import { Snackbar, TextField } from \"@material-ui/core\";\n// import { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost } from \"../../store/modelDucks/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostInput() {\n  _s();\n\n  const [postInput, setPostInput] = useState(\"\");\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const dispatch = useDispatch();\n  const currentUser = useSelector(state => state.currentUser);\n\n  const handleInputChange = e => {\n    setPostInput(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (postInput) {\n      if (currentUser === null) {\n        setSnackbarOpen(true);\n        return;\n      }\n\n      dispatch(createPost({\n        content: postInput,\n        user: currentUser\n      }));\n      setPostInput(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      \"data-testid\": \"postSubmission-form\",\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        label: \"Add a post\",\n        value: postInput,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PostInput, \"qgHDa3qDU5NoLWyZrhhTf6XbIMU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostInput\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","createPost","PostInput","postInput","setPostInput","snackbarOpen","setSnackbarOpen","dispatch","currentUser","state","handleInputChange","e","target","value","handleFormSubmit","preventDefault","content","user"],"sources":["/Users/developer/task/task3/src/components/Posts/PostInput.js"],"sourcesContent":["//import { Snackbar, TextField } from \"@material-ui/core\";\n// import { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost } from \"../../store/modelDucks/Post\";\n\nexport default function PostInput() {\n  const [postInput, setPostInput] = useState(\"\");\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  const handleInputChange = (e) => {\n    setPostInput(e.target.value);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (postInput) {\n      if (currentUser === null) {\n        setSnackbarOpen(true);\n        return;\n      }\n      dispatch(createPost({ content: postInput, user: currentUser }));\n      setPostInput(\"\");\n    }\n  };\n  return (\n    <>\n      <form data-testid={\"postSubmission-form\"} onSubmit={handleFormSubmit}>\n        <textarea\n          label=\"Add a post\"\n          value={postInput}\n          onChange={handleInputChange}\n        />\n      </form>\n      {/* <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={3000}\n        onClose={() => setSnackbarOpen(false)}\n      >\n        {/* <Alert onClose={() => setSnackbarOpen(false)} severity=\"warning\">\n          Please select a user before adding a post!\n        </Alert> \n      </Snackbar> */}\n    </>\n  );\n}\n"],"mappings":";;;AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,6BAA3B;;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAMS,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,WAAW,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;;EAEA,MAAME,iBAAiB,GAAIC,CAAD,IAAO;IAC/BP,YAAY,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAIH,CAAD,IAAO;IAC9BA,CAAC,CAACI,cAAF;;IACA,IAAIZ,SAAJ,EAAe;MACb,IAAIK,WAAW,KAAK,IAApB,EAA0B;QACxBF,eAAe,CAAC,IAAD,CAAf;QACA;MACD;;MACDC,QAAQ,CAACN,UAAU,CAAC;QAAEe,OAAO,EAAEb,SAAX;QAAsBc,IAAI,EAAET;MAA5B,CAAD,CAAX,CAAR;MACAJ,YAAY,CAAC,EAAD,CAAZ;IACD;EACF,CAVD;;EAWA,oBACE;IAAA,uBACE;MAAM,eAAa,qBAAnB;MAA0C,QAAQ,EAAEU,gBAApD;MAAA,uBACE;QACE,KAAK,EAAC,YADR;QAEE,KAAK,EAAEX,SAFT;QAGE,QAAQ,EAAEO;MAHZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAoBD;;GAzCuBR,S;UAGLH,W,EACGC,W;;;KAJEE,S"},"metadata":{},"sourceType":"module"}
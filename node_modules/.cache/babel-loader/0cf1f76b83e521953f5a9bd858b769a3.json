{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task/src/PostList.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { atomUserList, atomPostList } from \"./MainPage\";\nimport { useRecoilValue } from \"recoil\";\nimport ListItemCard from \"./ListItemCard\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FilterButton = styled.button`\n    border: none;\n    margin-right: 10px;\n    border-radius: 30px;\n    padding: 5px 8px;\n    box-sizing: border-box;\n    &.clicked {\n        background-color: pink;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        color: white;\n    }\n`;\n_c = FilterButton;\n\nconst PostList = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const postTotalList = useRecoilValue(atomPostList);\n  const [postList, setPostList] = useState([]);\n  const [tabIdx, setTabIdx] = useState(0);\n  const buttonList = [\"전체\", \"완료\", \"미완료\"];\n  useLayoutEffect(() => {\n    setPostList(postTotalList[userId - 1]);\n  }, [userId]);\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(postTotalList[userId - 1]);\n        break;\n\n      case 1:\n        {\n          setPostList(postTotalList[userId - 1].filter(item => item.completed));\n          break;\n        }\n\n      case 2:\n        setPostList(postTotalList[userId - 1].filter(item => !item.completed));\n        break;\n    }\n  }, [tabIdx]);\n\n  const handleClick = e => {\n    setTabIdx(Number(e.target.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: `Post-List of ${userId}`,\n      subtitle: `Number of Posts: ${postList.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), buttonList.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(FilterButton, {\n        onClick: handleClick,\n        id: idx,\n        className: tabIdx === idx ? \"clicked\" : \"\",\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this);\n    }), postList.map(item => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/postlist/${userId}/detailview/${item.id}`,\n        style: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemCard, {\n          item: item,\n          type: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(PostList, \"DLbjFwz8L7Utt09iswRI5R1cyyk=\", false, function () {\n  return [useParams, useRecoilValue];\n});\n\n_c2 = PostList;\nexport default PostList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilterButton\");\n$RefreshReg$(_c2, \"PostList\");","map":{"version":3,"names":["styled","React","useEffect","useLayoutEffect","useState","useParams","Link","atomUserList","atomPostList","useRecoilValue","ListItemCard","Header","FilterButton","button","PostList","userId","postTotalList","postList","setPostList","tabIdx","setTabIdx","buttonList","filter","item","completed","handleClick","e","Number","target","id","length","map","idx","textDecoration"],"sources":["/Users/developer/task/task/src/PostList.js"],"sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { atomUserList, atomPostList } from \"./MainPage\";\nimport { useRecoilValue } from \"recoil\";\nimport ListItemCard from \"./ListItemCard\";\nimport Header from \"./Header\";\n\nconst FilterButton = styled.button`\n    border: none;\n    margin-right: 10px;\n    border-radius: 30px;\n    padding: 5px 8px;\n    box-sizing: border-box;\n    &.clicked {\n        background-color: pink;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        color: white;\n    }\n`;\n\nconst PostList = () => {\n    const { userId } = useParams();\n    const postTotalList = useRecoilValue(atomPostList);\n    const [postList, setPostList] = useState([]);\n    const [tabIdx, setTabIdx] = useState(0);\n    const buttonList = [\"전체\", \"완료\", \"미완료\"];\n    useLayoutEffect(() => {\n        setPostList(postTotalList[userId - 1]);\n    }, [userId]);\n\n    useEffect(() => {\n        switch (tabIdx) {\n            case 0:\n                setPostList(postTotalList[userId - 1]);\n                break;\n            case 1: {\n                setPostList(postTotalList[userId - 1].filter((item) => item.completed));\n                break;\n            }\n            case 2:\n                setPostList(postTotalList[userId - 1].filter((item) => !item.completed));\n                break;\n        }\n    }, [tabIdx]);\n\n    const handleClick = (e) => {\n        setTabIdx(Number(e.target.id));\n    };\n\n    return (\n        <>\n            <Header\n                title={`Post-List of ${userId}`}\n                subtitle={`Number of Posts: ${postList.length}`}\n            />\n            {buttonList.map((item, idx) => {\n                return (\n                    <FilterButton\n                        onClick={handleClick}\n                        id={idx}\n                        className={tabIdx === idx ? \"clicked\" : \"\"}\n                    >\n                        {item}\n                    </FilterButton>\n                );\n            })}\n\n            {postList.map((item) => {\n                return (\n                    <Link\n                        to={`/postlist/${userId}/detailview/${item.id}`}\n                        style={{ textDecoration: \"none\" }}\n                    >\n                        <ListItemCard item={item} type=\"post\"></ListItemCard>\n                    </Link>\n                );\n            })}\n        </>\n    );\n};\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
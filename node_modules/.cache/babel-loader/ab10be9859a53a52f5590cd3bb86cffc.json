{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task3/src/screen/PostList.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { atomIsLoaded, atomPostList, atomUserList } from \"../data/atoms\";\nimport Header from \"../components/Header\";\nimport SimpleWithIcon from \"../components/SimpleWithIcon\";\nimport Tabs from \"../components/Tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const [isLoaded, setIsLoaded] = useRecoilState(atomIsLoaded);\n  const [posts, setPosts] = useRecoilState(atomPostList);\n  const userList = useRecoilValue(atomUserList);\n  const [postList, setPostList] = useState([]);\n  const [tabIdx, setTabIdx] = useState(0);\n  const [tabs, setTabs] = useState([{\n    name: \"전체\",\n    current: true\n  }, {\n    name: \"완료\",\n    current: false\n  }, {\n    name: \"미완료\",\n    current: false\n  }]);\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n      let postList = userList.map(userId => {\n        let newArr = [];\n        let i = 0;\n        res.data.forEach(item => {\n          if (item.userId === userId.id) {\n            newArr.push({\n              id: item.id,\n              postId: i,\n              title: item.title,\n              completed: item.completed\n            });\n            i++;\n          }\n        });\n        return newArr;\n      });\n      setPosts(postList);\n      sessionStorage.setItem(\"postList\", JSON.stringify(postList));\n      setIsLoaded(false);\n    } catch (e) {\n      console.log(\"##error\", e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  useLayoutEffect(() => {\n    if (isLoaded) fetchData(isLoaded);\n  }, [isLoaded]);\n  useLayoutEffect(() => {\n    setPostList(posts[userId - 1]);\n  }, [userId]);\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(posts[userId - 1]);\n        break;\n\n      case 1:\n        {\n          setPostList(posts[userId - 1].filter(item => item.completed));\n          break;\n        }\n\n      case 2:\n        setPostList(posts[userId - 1].filter(item => !item.completed));\n        break;\n    }\n\n    setTabs(prev => {\n      let temp = [...prev];\n      return temp.map((item, idx) => {\n        return { ...item,\n          current: idx === tabIdx ? true : false\n        };\n      });\n    });\n  }, [tabIdx]);\n\n  const handleClick = idx => {\n    setTabIdx(idx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: `Post-List of \"${userList[Number(userId) - 1].name}\"`,\n      subtitle: `Number of Posts: ${postList.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      handleClick: handleClick,\n      tabs: tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleWithIcon, {\n      postList: postList,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostList, \"RsawtcRKhQyRfa8p601nwS7g/Io=\", false, function () {\n  return [useParams, useRecoilState, useRecoilState, useRecoilValue];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["axios","React","useEffect","useLayoutEffect","useState","useParams","useRecoilState","useRecoilValue","atomIsLoaded","atomPostList","atomUserList","Header","SimpleWithIcon","Tabs","PostList","userId","isLoaded","setIsLoaded","posts","setPosts","userList","postList","setPostList","tabIdx","setTabIdx","tabs","setTabs","name","current","fetchData","res","get","map","newArr","i","data","forEach","item","id","push","postId","title","completed","sessionStorage","setItem","JSON","stringify","e","console","log","filter","prev","temp","idx","handleClick","Number","length","width","height"],"sources":["/Users/developer/task/task3/src/screen/PostList.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { atomIsLoaded, atomPostList, atomUserList } from \"../data/atoms\";\n\nimport Header from \"../components/Header\";\nimport SimpleWithIcon from \"../components/SimpleWithIcon\";\nimport Tabs from \"../components/Tabs\";\n\nconst PostList = () => {\n  const { userId } = useParams();\n  const [isLoaded, setIsLoaded] = useRecoilState(atomIsLoaded);\n  const [posts, setPosts] = useRecoilState(atomPostList);\n  const userList = useRecoilValue(atomUserList);\n  const [postList, setPostList] = useState([]);\n  const [tabIdx, setTabIdx] = useState(0);\n  const [tabs, setTabs] = useState([\n    { name: \"전체\", current: true },\n    { name: \"완료\", current: false },\n    { name: \"미완료\", current: false },\n  ]);\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n\n      let postList = userList.map((userId) => {\n        let newArr = [];\n        let i = 0;\n        res.data.forEach((item) => {\n          if (item.userId === userId.id) {\n            newArr.push({\n              id: item.id,\n              postId: i,\n              title: item.title,\n              completed: item.completed,\n            });\n            i++;\n          }\n        });\n        return newArr;\n      });\n      setPosts(postList);\n      sessionStorage.setItem(\"postList\", JSON.stringify(postList));\n\n      setIsLoaded(false);\n    } catch (e) {\n      console.log(\"##error\", e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    setIsLoaded(true);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (isLoaded) fetchData(isLoaded);\n  }, [isLoaded]);\n\n  useLayoutEffect(() => {\n    setPostList(posts[userId - 1]);\n  }, [userId]);\n\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(posts[userId - 1]);\n        break;\n      case 1: {\n        setPostList(posts[userId - 1].filter((item) => item.completed));\n        break;\n      }\n      case 2:\n        setPostList(posts[userId - 1].filter((item) => !item.completed));\n        break;\n    }\n    setTabs((prev) => {\n      let temp = [...prev];\n      return temp.map((item, idx) => {\n        return {\n          ...item,\n          current: idx === tabIdx ? true : false,\n        };\n      });\n    });\n  }, [tabIdx]);\n\n  const handleClick = (idx) => {\n    setTabIdx(idx);\n  };\n\n  return (\n    <>\n      {/* <Indicator /> */}\n      <Header\n        title={`Post-List of \"${userList[Number(userId) - 1].name}\"`}\n        subtitle={`Number of Posts: ${postList.length}`}\n      />\n      <Tabs handleClick={handleClick} tabs={tabs} />\n      <div style={{ width: \"100%\", height: \"20px\" }}></div>\n      <SimpleWithIcon postList={postList} userId={userId} />\n    </>\n  );\n};\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
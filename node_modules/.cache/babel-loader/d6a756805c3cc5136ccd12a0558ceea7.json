{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task/src/screen/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport ListItemCard from \"../components/ListItemCard\";\nimport { atomIsLoaded } from \"../data/atoms\";\nimport Indicator from \"../components/Indicator\";\nimport { atom, useRecoilState } from \"recoil\";\nimport Header from \"../components/Header\";\nimport GridList from \"../components/GridList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const atomUserList = atom({\n  key: \"ATOM_USER_LIST\",\n  default: []\n});\nexport const atomPostList = atom({\n  key: \"ATOM_POST_LIST\",\n  default: []\n});\nconst ListItemsContainer = styled.ul`\n    padding: 0;\n`;\n_c = ListItemsContainer;\n\nconst MainPage = () => {\n  _s();\n\n  //https://jsonplaceholder.typicode.com/todos\n  const [users, setUsers] = useRecoilState(atomUserList);\n  const [posts, setPosts] = useRecoilState(atomPostList);\n  const [isLoaded, setIsLoaded] = useRecoilState(atomIsLoaded);\n\n  const fetchData = async () => {\n    try {\n      const userRes = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n      const userList = userRes.data;\n      let postList = userList.map(userId => {\n        let newArr = [];\n        let i = 0;\n        res.data.forEach(item => {\n          if (item.userId === userId.id) {\n            newArr.push({\n              id: item.id,\n              postId: i,\n              title: item.title,\n              completed: item.completed\n            });\n            i++;\n          }\n        });\n        return newArr;\n      });\n      setUsers(userList);\n      setPosts(postList);\n      setIsLoaded(false);\n    } catch (e) {\n      console.log(\"##error\", e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  useLayoutEffect(() => {\n    console.log(\"##isLoaded\", isLoaded);\n    if (isLoaded) fetchData(isLoaded);\n  }, [isLoaded]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Indicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      title: \"User-List\",\n      subtitle: `Number of Users: ${users.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListItemsContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridList, {\n        people: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainPage, \"8Ngdhybv/vTbp28D1uJtjXOhR3w=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c2 = MainPage;\nexport default MainPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListItemsContainer\");\n$RefreshReg$(_c2, \"MainPage\");","map":{"version":3,"names":["styled","createGlobalStyle","axios","React","useEffect","useLayoutEffect","useState","ListItemCard","atomIsLoaded","Indicator","atom","useRecoilState","Header","GridList","atomUserList","key","default","atomPostList","ListItemsContainer","ul","MainPage","users","setUsers","posts","setPosts","isLoaded","setIsLoaded","fetchData","userRes","get","res","userList","data","postList","map","userId","newArr","i","forEach","item","id","push","postId","title","completed","e","console","log","length"],"sources":["/Users/developer/task/task/src/screen/MainPage.js"],"sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\nimport axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport ListItemCard from \"../components/ListItemCard\";\nimport { atomIsLoaded } from \"../data/atoms\";\nimport Indicator from \"../components/Indicator\";\n\nimport { atom, useRecoilState } from \"recoil\";\nimport Header from \"../components/Header\";\nimport GridList from \"../components/GridList\";\n\nexport const atomUserList = atom({\n    key: \"ATOM_USER_LIST\",\n    default: [],\n});\nexport const atomPostList = atom({\n    key: \"ATOM_POST_LIST\",\n    default: [],\n});\n\nconst ListItemsContainer = styled.ul`\n    padding: 0;\n`;\n\nconst MainPage = () => {\n    //https://jsonplaceholder.typicode.com/todos\n    const [users, setUsers] = useRecoilState(atomUserList);\n    const [posts, setPosts] = useRecoilState(atomPostList);\n    const [isLoaded, setIsLoaded] = useRecoilState(atomIsLoaded);\n\n    const fetchData = async () => {\n        try {\n            const userRes = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n            const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n\n            const userList = userRes.data;\n            let postList = userList.map((userId) => {\n                let newArr = [];\n                let i = 0;\n                res.data.forEach((item) => {\n                    if (item.userId === userId.id) {\n                        newArr.push({\n                            id: item.id,\n                            postId: i,\n                            title: item.title,\n                            completed: item.completed,\n                        });\n                        i++;\n                    }\n                });\n                return newArr;\n            });\n            setUsers(userList);\n            setPosts(postList);\n            setIsLoaded(false);\n        } catch (e) {\n            console.log(\"##error\", e);\n        }\n    };\n\n    useLayoutEffect(() => {\n        setIsLoaded(true);\n    }, []);\n\n    useLayoutEffect(() => {\n        console.log(\"##isLoaded\", isLoaded);\n        if (isLoaded) fetchData(isLoaded);\n    }, [isLoaded]);\n\n    return (\n        <>\n            <Indicator />\n            <Header title={\"User-List\"} subtitle={`Number of Users: ${users.length}`} />\n            <ListItemsContainer>\n                {/* {users.map((user, idx) => {\n                    return (\n                        <Link to={`/postlist/${user.id}`} style={{ textDecoration: \"none\" }}>\n                            <ListItemCard item={user.name} type=\"main\"></ListItemCard>\n                        </Link>\n                    );\n                })} */}\n                <GridList people={users}></GridList>\n            </ListItemsContainer>\n        </>\n    );\n};\nexport default MainPage;\n"],"mappings":";;;AAAA,OAAOA,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,eAA3B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAASC,IAAT,EAAeC,cAAf,QAAqC,QAArC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,OAAO,MAAMC,YAAY,GAAGJ,IAAI,CAAC;EAC7BK,GAAG,EAAE,gBADwB;EAE7BC,OAAO,EAAE;AAFoB,CAAD,CAAzB;AAIP,OAAO,MAAMC,YAAY,GAAGP,IAAI,CAAC;EAC7BK,GAAG,EAAE,gBADwB;EAE7BC,OAAO,EAAE;AAFoB,CAAD,CAAzB;AAKP,MAAME,kBAAkB,GAAGlB,MAAM,CAACmB,EAAG;AACrC;AACA,CAFA;KAAMD,kB;;AAIN,MAAME,QAAQ,GAAG,MAAM;EAAA;;EACnB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,cAAc,CAACG,YAAD,CAAxC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBb,cAAc,CAACM,YAAD,CAAxC;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bf,cAAc,CAACH,YAAD,CAA9C;;EAEA,MAAMmB,SAAS,GAAG,YAAY;IAC1B,IAAI;MACA,MAAMC,OAAO,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAU,4CAAV,CAAtB;MAEA,MAAMC,GAAG,GAAG,MAAM5B,KAAK,CAAC2B,GAAN,CAAU,4CAAV,CAAlB;MAEA,MAAME,QAAQ,GAAGH,OAAO,CAACI,IAAzB;MACA,IAAIC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAcC,MAAD,IAAY;QACpC,IAAIC,MAAM,GAAG,EAAb;QACA,IAAIC,CAAC,GAAG,CAAR;QACAP,GAAG,CAACE,IAAJ,CAASM,OAAT,CAAkBC,IAAD,IAAU;UACvB,IAAIA,IAAI,CAACJ,MAAL,KAAgBA,MAAM,CAACK,EAA3B,EAA+B;YAC3BJ,MAAM,CAACK,IAAP,CAAY;cACRD,EAAE,EAAED,IAAI,CAACC,EADD;cAERE,MAAM,EAAEL,CAFA;cAGRM,KAAK,EAAEJ,IAAI,CAACI,KAHJ;cAIRC,SAAS,EAAEL,IAAI,CAACK;YAJR,CAAZ;YAMAP,CAAC;UACJ;QACJ,CAVD;QAWA,OAAOD,MAAP;MACH,CAfc,CAAf;MAgBAd,QAAQ,CAACS,QAAD,CAAR;MACAP,QAAQ,CAACS,QAAD,CAAR;MACAP,WAAW,CAAC,KAAD,CAAX;IACH,CAzBD,CAyBE,OAAOmB,CAAP,EAAU;MACRC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAvB;IACH;EACJ,CA7BD;;EA+BAxC,eAAe,CAAC,MAAM;IAClBqB,WAAW,CAAC,IAAD,CAAX;EACH,CAFc,EAEZ,EAFY,CAAf;EAIArB,eAAe,CAAC,MAAM;IAClByC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BtB,QAA1B;IACA,IAAIA,QAAJ,EAAcE,SAAS,CAACF,QAAD,CAAT;EACjB,CAHc,EAGZ,CAACA,QAAD,CAHY,CAAf;EAKA,oBACI;IAAA,wBACI,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD;MAAQ,KAAK,EAAE,WAAf;MAA4B,QAAQ,EAAG,oBAAmBJ,KAAK,CAAC2B,MAAO;IAAvE;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,kBAAD;MAAA,uBAQI,QAAC,QAAD;QAAU,MAAM,EAAE3B;MAAlB;QAAA;QAAA;QAAA;MAAA;IARJ;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA,gBADJ;AAgBH,CA9DD;;GAAMD,Q;UAEwBT,c,EACAA,c,EACMA,c;;;MAJ9BS,Q;AA+DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
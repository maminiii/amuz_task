{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task/src/screen/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\nimport { atomUserList, atomIsLoaded } from \"../data/atoms\";\nimport Indicator from \"../components/Indicator\";\nimport Header from \"../components/Header\";\nimport GridList from \"../components/GridList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListItemsContainer = styled.ul`\n    padding: 0;\n`;\n_c = ListItemsContainer;\n\nconst MainPage = () => {\n  _s();\n\n  //https://jsonplaceholder.typicode.com/todos\n  const [users, setUsers] = useRecoilState(atomUserList);\n  const [isLoaded, setIsLoaded] = useRecoilState(atomIsLoaded);\n\n  const fetchData = async () => {\n    try {\n      const userRes = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n      const userList = userRes.data;\n      setUsers(userList);\n      setIsLoaded(false);\n    } catch (e) {\n      console.log(\"##error\", e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    setIsLoaded(true);\n  }, [needUpdate]);\n  useLayoutEffect(() => {\n    if (isLoaded) fetchData(isLoaded);\n  }, [isLoaded]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Indicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      title: \"User-List\",\n      subtitle: `Number of Users: ${users.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListItemsContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridList, {\n        people: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainPage, \"Sr4IgZgCs1nrNbGeiYSzdHJD5D4=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c2 = MainPage;\nexport default MainPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListItemsContainer\");\n$RefreshReg$(_c2, \"MainPage\");","map":{"version":3,"names":["styled","createGlobalStyle","axios","React","useEffect","useLayoutEffect","useState","atom","useRecoilState","atomUserList","atomIsLoaded","Indicator","Header","GridList","ListItemsContainer","ul","MainPage","users","setUsers","isLoaded","setIsLoaded","fetchData","userRes","get","userList","data","e","console","log","needUpdate","length"],"sources":["/Users/developer/task/task/src/screen/MainPage.js"],"sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\nimport axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\nimport { atomUserList, atomIsLoaded } from \"../data/atoms\";\n\nimport Indicator from \"../components/Indicator\";\nimport Header from \"../components/Header\";\nimport GridList from \"../components/GridList\";\n\nconst ListItemsContainer = styled.ul`\n    padding: 0;\n`;\n\nconst MainPage = () => {\n    //https://jsonplaceholder.typicode.com/todos\n    const [users, setUsers] = useRecoilState(atomUserList);\n    const [isLoaded, setIsLoaded] = useRecoilState(atomIsLoaded);\n\n    const fetchData = async () => {\n        try {\n            const userRes = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n            const userList = userRes.data;\n\n            setUsers(userList);\n            setIsLoaded(false);\n        } catch (e) {\n            console.log(\"##error\", e);\n        }\n    };\n\n    useLayoutEffect(() => {\n        setIsLoaded(true);\n    }, [needUpdate]);\n\n    useLayoutEffect(() => {\n        if (isLoaded) fetchData(isLoaded);\n    }, [isLoaded]);\n\n    return (\n        <>\n            <Indicator />\n            <Header title={\"User-List\"} subtitle={`Number of Users: ${users.length}`} />\n            <ListItemsContainer>\n                <GridList people={users}></GridList>\n            </ListItemsContainer>\n        </>\n    );\n};\nexport default MainPage;\n"],"mappings":";;;AAAA,OAAOA,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,eAA3B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,QAArC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,eAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,kBAAkB,GAAGd,MAAM,CAACe,EAAG;AACrC;AACA,CAFA;KAAMD,kB;;AAIN,MAAME,QAAQ,GAAG,MAAM;EAAA;;EACnB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,cAAc,CAACC,YAAD,CAAxC;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BZ,cAAc,CAACE,YAAD,CAA9C;;EAEA,MAAMW,SAAS,GAAG,YAAY;IAC1B,IAAI;MACA,MAAMC,OAAO,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,4CAAV,CAAtB;MACA,MAAMC,QAAQ,GAAGF,OAAO,CAACG,IAAzB;MAEAP,QAAQ,CAACM,QAAD,CAAR;MACAJ,WAAW,CAAC,KAAD,CAAX;IACH,CAND,CAME,OAAOM,CAAP,EAAU;MACRC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAvB;IACH;EACJ,CAVD;;EAYArB,eAAe,CAAC,MAAM;IAClBe,WAAW,CAAC,IAAD,CAAX;EACH,CAFc,EAEZ,CAACS,UAAD,CAFY,CAAf;EAIAxB,eAAe,CAAC,MAAM;IAClB,IAAIc,QAAJ,EAAcE,SAAS,CAACF,QAAD,CAAT;EACjB,CAFc,EAEZ,CAACA,QAAD,CAFY,CAAf;EAIA,oBACI;IAAA,wBACI,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD;MAAQ,KAAK,EAAE,WAAf;MAA4B,QAAQ,EAAG,oBAAmBF,KAAK,CAACa,MAAO;IAAvE;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,kBAAD;MAAA,uBACI,QAAC,QAAD;QAAU,MAAM,EAAEb;MAAlB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA,gBADJ;AASH,CAlCD;;GAAMD,Q;UAEwBR,c,EACMA,c;;;MAH9BQ,Q;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * Defines algorithm for installing a field onto a model and related models.\n * Conforms to the template method behavioral design pattern.\n * @private\n * @memberof module:fields\n */\n\nexport var FieldInstallerTemplate = /*#__PURE__*/function () {\n  function FieldInstallerTemplate(opts) {\n    this.field = opts.field;\n    this.fieldName = opts.fieldName;\n    this.model = opts.model;\n    this.orm = opts.orm;\n    /**\n     * the field itself has no knowledge of the model\n     * it is being installed upon; we need to inform it\n     * that it is a self-referencing field for the field\n     * to be able to make better informed decisions\n     */\n\n    if (this.field.references(this.model)) {\n      this.field.toModelName = \"this\";\n    }\n  }\n\n  var _proto = FieldInstallerTemplate.prototype;\n\n  _proto.run = function run() {\n    this.installForwardsDescriptor();\n\n    if (this.field.installsForwardsVirtualField) {\n      this.installForwardsVirtualField();\n    }\n    /**\n     * Install a backwards field on a model as a consequence\n     * of having installed the forwards field on another model.\n     */\n\n\n    if (this.field.installsBackwardsDescriptor) {\n      this.installBackwardsDescriptor();\n    }\n\n    if (this.field.installsBackwardsVirtualField) {\n      this.installBackwardsVirtualField();\n    }\n  };\n\n  _createClass(FieldInstallerTemplate, [{\n    key: \"toModel\",\n    get: function get() {\n      if (typeof this._toModel === \"undefined\") {\n        var toModelName = this.field.toModelName;\n\n        if (!toModelName) {\n          this._toModel = null;\n        } else if (toModelName === \"this\") {\n          this._toModel = this.model;\n        } else {\n          this._toModel = this.orm.get(toModelName);\n        }\n      }\n\n      return this._toModel;\n    }\n  }, {\n    key: \"throughModel\",\n    get: function get() {\n      if (typeof this._throughModel === \"undefined\") {\n        var throughModelName = this.field.getThroughModelName(this.fieldName, this.model);\n\n        if (!throughModelName) {\n          this._throughModel = null;\n        } else {\n          this._throughModel = this.orm.get(throughModelName);\n        }\n      }\n\n      return this._throughModel;\n    }\n  }, {\n    key: \"backwardsFieldName\",\n    get: function get() {\n      return this.field.getBackwardsFieldName(this.model);\n    }\n  }]);\n\n  return FieldInstallerTemplate;\n}();\nexport default FieldInstallerTemplate;","map":{"version":3,"names":["_createClass","FieldInstallerTemplate","opts","field","fieldName","model","orm","references","toModelName","_proto","prototype","run","installForwardsDescriptor","installsForwardsVirtualField","installForwardsVirtualField","installsBackwardsDescriptor","installBackwardsDescriptor","installsBackwardsVirtualField","installBackwardsVirtualField","key","get","_toModel","_throughModel","throughModelName","getThroughModelName","getBackwardsFieldName"],"sources":["/Users/developer/task/task3/node_modules/redux-orm/es/fields/FieldInstallerTemplate.js"],"sourcesContent":["import _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Defines algorithm for installing a field onto a model and related models.\n * Conforms to the template method behavioral design pattern.\n * @private\n * @memberof module:fields\n */\nexport var FieldInstallerTemplate = /*#__PURE__*/function () {\n  function FieldInstallerTemplate(opts) {\n    this.field = opts.field;\n    this.fieldName = opts.fieldName;\n    this.model = opts.model;\n    this.orm = opts.orm;\n    /**\n     * the field itself has no knowledge of the model\n     * it is being installed upon; we need to inform it\n     * that it is a self-referencing field for the field\n     * to be able to make better informed decisions\n     */\n\n    if (this.field.references(this.model)) {\n      this.field.toModelName = \"this\";\n    }\n  }\n\n  var _proto = FieldInstallerTemplate.prototype;\n\n  _proto.run = function run() {\n    this.installForwardsDescriptor();\n\n    if (this.field.installsForwardsVirtualField) {\n      this.installForwardsVirtualField();\n    }\n    /**\n     * Install a backwards field on a model as a consequence\n     * of having installed the forwards field on another model.\n     */\n\n\n    if (this.field.installsBackwardsDescriptor) {\n      this.installBackwardsDescriptor();\n    }\n\n    if (this.field.installsBackwardsVirtualField) {\n      this.installBackwardsVirtualField();\n    }\n  };\n\n  _createClass(FieldInstallerTemplate, [{\n    key: \"toModel\",\n    get: function get() {\n      if (typeof this._toModel === \"undefined\") {\n        var toModelName = this.field.toModelName;\n\n        if (!toModelName) {\n          this._toModel = null;\n        } else if (toModelName === \"this\") {\n          this._toModel = this.model;\n        } else {\n          this._toModel = this.orm.get(toModelName);\n        }\n      }\n\n      return this._toModel;\n    }\n  }, {\n    key: \"throughModel\",\n    get: function get() {\n      if (typeof this._throughModel === \"undefined\") {\n        var throughModelName = this.field.getThroughModelName(this.fieldName, this.model);\n\n        if (!throughModelName) {\n          this._throughModel = null;\n        } else {\n          this._throughModel = this.orm.get(throughModelName);\n        }\n      }\n\n      return this._throughModel;\n    }\n  }, {\n    key: \"backwardsFieldName\",\n    get: function get() {\n      return this.field.getBackwardsFieldName(this.model);\n    }\n  }]);\n\n  return FieldInstallerTemplate;\n}();\nexport default FieldInstallerTemplate;"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,oCAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,sBAAsB,GAAG,aAAa,YAAY;EAC3D,SAASA,sBAAT,CAAgCC,IAAhC,EAAsC;IACpC,KAAKC,KAAL,GAAaD,IAAI,CAACC,KAAlB;IACA,KAAKC,SAAL,GAAiBF,IAAI,CAACE,SAAtB;IACA,KAAKC,KAAL,GAAaH,IAAI,CAACG,KAAlB;IACA,KAAKC,GAAL,GAAWJ,IAAI,CAACI,GAAhB;IACA;AACJ;AACA;AACA;AACA;AACA;;IAEI,IAAI,KAAKH,KAAL,CAAWI,UAAX,CAAsB,KAAKF,KAA3B,CAAJ,EAAuC;MACrC,KAAKF,KAAL,CAAWK,WAAX,GAAyB,MAAzB;IACD;EACF;;EAED,IAAIC,MAAM,GAAGR,sBAAsB,CAACS,SAApC;;EAEAD,MAAM,CAACE,GAAP,GAAa,SAASA,GAAT,GAAe;IAC1B,KAAKC,yBAAL;;IAEA,IAAI,KAAKT,KAAL,CAAWU,4BAAf,EAA6C;MAC3C,KAAKC,2BAAL;IACD;IACD;AACJ;AACA;AACA;;;IAGI,IAAI,KAAKX,KAAL,CAAWY,2BAAf,EAA4C;MAC1C,KAAKC,0BAAL;IACD;;IAED,IAAI,KAAKb,KAAL,CAAWc,6BAAf,EAA8C;MAC5C,KAAKC,4BAAL;IACD;EACF,CAnBD;;EAqBAlB,YAAY,CAACC,sBAAD,EAAyB,CAAC;IACpCkB,GAAG,EAAE,SAD+B;IAEpCC,GAAG,EAAE,SAASA,GAAT,GAAe;MAClB,IAAI,OAAO,KAAKC,QAAZ,KAAyB,WAA7B,EAA0C;QACxC,IAAIb,WAAW,GAAG,KAAKL,KAAL,CAAWK,WAA7B;;QAEA,IAAI,CAACA,WAAL,EAAkB;UAChB,KAAKa,QAAL,GAAgB,IAAhB;QACD,CAFD,MAEO,IAAIb,WAAW,KAAK,MAApB,EAA4B;UACjC,KAAKa,QAAL,GAAgB,KAAKhB,KAArB;QACD,CAFM,MAEA;UACL,KAAKgB,QAAL,GAAgB,KAAKf,GAAL,CAASc,GAAT,CAAaZ,WAAb,CAAhB;QACD;MACF;;MAED,OAAO,KAAKa,QAAZ;IACD;EAhBmC,CAAD,EAiBlC;IACDF,GAAG,EAAE,cADJ;IAEDC,GAAG,EAAE,SAASA,GAAT,GAAe;MAClB,IAAI,OAAO,KAAKE,aAAZ,KAA8B,WAAlC,EAA+C;QAC7C,IAAIC,gBAAgB,GAAG,KAAKpB,KAAL,CAAWqB,mBAAX,CAA+B,KAAKpB,SAApC,EAA+C,KAAKC,KAApD,CAAvB;;QAEA,IAAI,CAACkB,gBAAL,EAAuB;UACrB,KAAKD,aAAL,GAAqB,IAArB;QACD,CAFD,MAEO;UACL,KAAKA,aAAL,GAAqB,KAAKhB,GAAL,CAASc,GAAT,CAAaG,gBAAb,CAArB;QACD;MACF;;MAED,OAAO,KAAKD,aAAZ;IACD;EAdA,CAjBkC,EAgClC;IACDH,GAAG,EAAE,oBADJ;IAEDC,GAAG,EAAE,SAASA,GAAT,GAAe;MAClB,OAAO,KAAKjB,KAAL,CAAWsB,qBAAX,CAAiC,KAAKpB,KAAtC,CAAP;IACD;EAJA,CAhCkC,CAAzB,CAAZ;;EAuCA,OAAOJ,sBAAP;AACD,CAjFgD,EAA1C;AAkFP,eAAeA,sBAAf"},"metadata":{},"sourceType":"module"}
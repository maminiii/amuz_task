{"ast":null,"code":"var _jsxFileName = \"/Users/developer/task/task/src/PostList.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { atomUserList, atomPostList } from \"./MainPage\";\nimport { useRecoilValue } from \"recoil\";\nimport ListItemCard from \"./ListItemCard\";\nimport Header from \"./Header\";\nimport Tabs from \"./components/Tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FilterButton = styled.button`\n    border: none;\n    margin-right: 10px;\n    border-radius: 30px;\n    padding: 5px 8px;\n    box-sizing: border-box;\n    &.clicked {\n        background-color: pink;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        color: white;\n    }\n`;\n\nconst PostList = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const postTotalList = useRecoilValue(atomPostList);\n  const userList = useRecoilValue(atomUserList);\n  const [postList, setPostList] = useState([]);\n  const [tabIdx, setTabIdx] = useState(0);\n  const [tabs, setTabs] = useState([{\n    name: \"전체\",\n    href: \"#\",\n    current: true\n  }, {\n    name: \"완료\",\n    href: \"#\",\n    current: false\n  }, {\n    name: \"미완료\",\n    href: \"#\",\n    current: false\n  }]);\n  useLayoutEffect(() => {\n    setPostList(postTotalList[userId - 1]);\n  }, [userId]);\n  useEffect(() => {\n    switch (tabIdx) {\n      case 0:\n        setPostList(postTotalList[userId - 1]);\n        break;\n\n      case 1:\n        {\n          setPostList(postTotalList[userId - 1].filter(item => item.completed));\n          break;\n        }\n\n      case 2:\n        setPostList(postTotalList[userId - 1].filter(item => !item.completed));\n        break;\n    }\n\n    setTabs(prev => {\n      return [...prev.slice(0, tabIdx - 1), { ...prev[tabIdx],\n        current: true\n      }, ...prev.slice(tabIdx)];\n    });\n  }, [tabIdx]);\n\n  const handleClick = e => {\n    setTabIdx(Number(e.target.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: `Post-List of \"${userList[Number(userId) - 1].name}\"`,\n      subtitle: `Number of Posts: ${postList.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      handleClick: handleClick,\n      tabs: tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), postList.map(item => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/postlist/${userId}/detailview/${item.id}`,\n        style: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemCard, {\n          item: item,\n          type: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(PostList, \"5toFfr90CPZJuekkrAIcFypkPQs=\", false, function () {\n  return [useParams, useRecoilValue, useRecoilValue];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["styled","React","useEffect","useLayoutEffect","useState","useParams","Link","atomUserList","atomPostList","useRecoilValue","ListItemCard","Header","Tabs","FilterButton","button","PostList","userId","postTotalList","userList","postList","setPostList","tabIdx","setTabIdx","tabs","setTabs","name","href","current","filter","item","completed","prev","slice","handleClick","e","Number","target","id","length","map","textDecoration"],"sources":["/Users/developer/task/task/src/PostList.js"],"sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { atomUserList, atomPostList } from \"./MainPage\";\nimport { useRecoilValue } from \"recoil\";\nimport ListItemCard from \"./ListItemCard\";\nimport Header from \"./Header\";\nimport Tabs from \"./components/Tabs\";\n\nconst FilterButton = styled.button`\n    border: none;\n    margin-right: 10px;\n    border-radius: 30px;\n    padding: 5px 8px;\n    box-sizing: border-box;\n    &.clicked {\n        background-color: pink;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        color: white;\n    }\n`;\n\nconst PostList = () => {\n    const { userId } = useParams();\n    const postTotalList = useRecoilValue(atomPostList);\n    const userList = useRecoilValue(atomUserList);\n    const [postList, setPostList] = useState([]);\n    const [tabIdx, setTabIdx] = useState(0);\n    const [tabs, setTabs] = useState([\n        { name: \"전체\", href: \"#\", current: true },\n        { name: \"완료\", href: \"#\", current: false },\n        { name: \"미완료\", href: \"#\", current: false },\n    ]);\n    useLayoutEffect(() => {\n        setPostList(postTotalList[userId - 1]);\n    }, [userId]);\n\n    useEffect(() => {\n        switch (tabIdx) {\n            case 0:\n                setPostList(postTotalList[userId - 1]);\n                break;\n            case 1: {\n                setPostList(postTotalList[userId - 1].filter((item) => item.completed));\n                break;\n            }\n            case 2:\n                setPostList(postTotalList[userId - 1].filter((item) => !item.completed));\n                break;\n        }\n        setTabs((prev) => {\n            return [\n                ...prev.slice(0, tabIdx - 1),\n                { ...prev[tabIdx], current: true },\n                ...prev.slice(tabIdx),\n            ];\n        });\n    }, [tabIdx]);\n\n    const handleClick = (e) => {\n        setTabIdx(Number(e.target.id));\n    };\n\n    return (\n        <>\n            <Header\n                title={`Post-List of \"${userList[Number(userId) - 1].name}\"`}\n                subtitle={`Number of Posts: ${postList.length}`}\n            />\n            <Tabs handleClick={handleClick} tabs={tabs} />\n\n            {postList.map((item) => {\n                return (\n                    <Link\n                        to={`/postlist/${userId}/detailview/${item.id}`}\n                        style={{ textDecoration: \"none\" }}\n                    >\n                        <ListItemCard item={item} type=\"post\"></ListItemCard>\n                    </Link>\n                );\n            })}\n        </>\n    );\n};\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
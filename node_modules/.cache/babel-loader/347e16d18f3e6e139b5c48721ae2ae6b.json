{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/* eslint-disable max-classes-per-file */\n\n\nimport Session from \"./Session\";\nimport Model from \"./Model\";\nimport { createDatabase as defaultCreateDatabase } from \"./db\";\nimport { attr } from \"./fields\";\nimport Field from \"./fields/Field\";\nimport ForeignKey from \"./fields/ForeignKey\";\nimport ManyToMany from \"./fields/ManyToMany\";\nimport { createModelSelectorSpec } from \"./selectors\";\nimport { m2mName, attachQuerySetMethods, m2mToFieldName, m2mFromFieldName, warnDeprecated } from \"./utils\";\nvar ORM_DEFAULTS = {\n  createDatabase: defaultCreateDatabase\n};\nvar RESERVED_TABLE_OPTIONS = [\"indexes\", \"meta\"];\n\nvar isReservedTableOption = function isReservedTableOption(word) {\n  return RESERVED_TABLE_OPTIONS.includes(word);\n};\n/**\n * ORM - the Object Relational Mapper.\n *\n * Use instances of this class to:\n *\n * - Register your {@link Model} classes using {@link ORM#register}\n * - Get the empty state for the underlying database with {@link ORM#getEmptyState}\n * - Start an immutable database session with {@link ORM#session}\n * - Start a mutating database session with {@link ORM#mutableSession}\n *\n * Internally, this class handles generating a schema specification from models\n * to the database.\n */\n\n\nvar ORM = /*#__PURE__*/function () {\n  /**\n   * Creates a new ORM instance.\n   *\n   * @param {Object} [opts]\n   * @param {Function} [opts.stateSelector] - function that given a Redux state tree\n   *                                          will return the ORM state's subtree,\n   *                                          e.g. `state => state.orm`\n   *                                          (necessary if you want to use selectors)\n   * @param {Function} [opts.createDatabase] - function that creates a database\n   */\n  function ORM(opts) {\n    var _ORM_DEFAULTS = _objectSpread(_objectSpread({}, ORM_DEFAULTS), opts || {}),\n        createDatabase = _ORM_DEFAULTS.createDatabase;\n\n    this.createDatabase = createDatabase;\n    this.registry = [];\n    this.implicitThroughModels = [];\n    this.installedFields = {};\n    this.stateSelector = opts ? opts.stateSelector : null;\n  }\n  /**\n   * Registers a {@link Model} class to the ORM.\n   *\n   * If the model has declared any ManyToMany fields, their\n   * through models will be generated and registered with\n   * this call, unless a custom through model has been specified.\n   *\n   * @param  {...Model} models - a {@link Model} class to register\n   * @return {undefined}\n   */\n\n\n  var _proto = ORM.prototype;\n\n  _proto.register = function register() {\n    var _this = this;\n\n    for (var _len = arguments.length, models = new Array(_len), _key = 0; _key < _len; _key++) {\n      models[_key] = arguments[_key];\n    }\n\n    models.forEach(function (model) {\n      if (model.modelName === undefined) {\n        throw new Error(\"A model was passed that doesn't have a modelName set\");\n      }\n\n      model.invalidateClassCache();\n\n      _this.registerManyToManyModelsFor(model);\n\n      _this.registry.push(model);\n\n      Object.defineProperty(_this, model.modelName, {\n        get: function get() {\n          // make sure virtualFields are set up\n          _this._setupModelPrototypes(_this.registry);\n\n          return createModelSelectorSpec({\n            model: model,\n            orm: _this\n          });\n        }\n      });\n    });\n  };\n\n  _proto.registerManyToManyModelsFor = function registerManyToManyModelsFor(model) {\n    var _this2 = this;\n\n    var fields = model.fields;\n    var thisModelName = model.modelName;\n    Object.entries(fields).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          fieldName = _ref2[0],\n          fieldInstance = _ref2[1];\n\n      if (!(fieldInstance instanceof ManyToMany)) {\n        return;\n      }\n\n      var toModelName;\n\n      if (fieldInstance.toModelName === \"this\") {\n        toModelName = thisModelName;\n      } else {\n        toModelName = fieldInstance.toModelName; // eslint-disable-line prefer-destructuring\n      }\n\n      var selfReferencing = thisModelName === toModelName;\n      var fromFieldName = m2mFromFieldName(thisModelName);\n      var toFieldName = m2mToFieldName(toModelName);\n\n      if (fieldInstance.through) {\n        if (selfReferencing && !fieldInstance.throughFields) {\n          throw new Error(\"Self-referencing many-to-many relationship at \" + \"\\\"\".concat(thisModelName, \".\").concat(fieldName, \"\\\" using custom \") + \"model \\\"\".concat(fieldInstance.through, \"\\\" has no \") + \"throughFields key. Cannot determine which \" + \"fields reference the instances partaking \" + \"in the relationship.\");\n        }\n      } else {\n        var _Through$fields;\n\n        var Through = /*#__PURE__*/function (_Model) {\n          _inheritsLoose(ThroughModel, _Model);\n\n          function ThroughModel() {\n            return _Model.apply(this, arguments) || this;\n          }\n\n          return ThroughModel;\n        }(Model);\n\n        Through.modelName = m2mName(thisModelName, fieldName);\n\n        var PlainForeignKey = /*#__PURE__*/function (_ForeignKey) {\n          _inheritsLoose(PlainForeignKey, _ForeignKey);\n\n          function PlainForeignKey() {\n            return _ForeignKey.apply(this, arguments) || this;\n          }\n\n          _createClass(PlainForeignKey, [{\n            key: \"installsBackwardsVirtualField\",\n            get: function get() {\n              return false;\n            }\n          }, {\n            key: \"installsBackwardsDescriptor\",\n            get: function get() {\n              return false;\n            }\n          }]);\n\n          return PlainForeignKey;\n        }(ForeignKey);\n\n        var ForeignKeyClass = selfReferencing ? PlainForeignKey : ForeignKey;\n        Through.fields = (_Through$fields = {\n          id: attr()\n        }, _defineProperty(_Through$fields, fromFieldName, new ForeignKeyClass(thisModelName)), _defineProperty(_Through$fields, toFieldName, new ForeignKeyClass(toModelName)), _Through$fields);\n        Through.invalidateClassCache();\n\n        _this2.implicitThroughModels.push(Through);\n      }\n    });\n  }\n  /**\n   * Gets a {@link Model} class by its name from the registry.\n   * @param  {string} modelName - the name of the {@link Model} class to get\n   * @throws If {@link Model} class is not found.\n   * @return {Model} the {@link Model} class, if found\n   */\n  ;\n\n  _proto.get = function get(modelName) {\n    var allModels = this.registry.concat(this.implicitThroughModels);\n    var found = Object.values(allModels).find(function (model) {\n      return model.modelName === modelName;\n    });\n\n    if (typeof found === \"undefined\") {\n      throw new Error(\"Did not find model \".concat(modelName, \" from registry.\"));\n    }\n\n    return found;\n  };\n\n  _proto.getModelClasses = function getModelClasses() {\n    this._setupModelPrototypes(this.registry);\n\n    this._setupModelPrototypes(this.implicitThroughModels);\n\n    return this.registry.concat(this.implicitThroughModels);\n  };\n\n  _proto.generateSchemaSpec = function generateSchemaSpec() {\n    var models = this.getModelClasses();\n    var tables = models.reduce(function (spec, modelClass) {\n      var tableName = modelClass.modelName;\n      var tableSpec = modelClass.tableOptions();\n      Object.keys(tableSpec).filter(isReservedTableOption).forEach(function (key) {\n        throw new Error(\"Reserved keyword `\".concat(key, \"` used in \").concat(tableName, \".options.\"));\n      });\n      spec[tableName] = _objectSpread({\n        fields: _objectSpread({}, modelClass.fields)\n      }, tableSpec);\n      return spec;\n    }, {});\n    return {\n      tables: tables\n    };\n  };\n\n  _proto.getDatabase = function getDatabase() {\n    if (!this.db) {\n      this.db = this.createDatabase(this.generateSchemaSpec());\n    }\n\n    return this.db;\n  }\n  /**\n   * Returns the empty database state.\n   * @return {Object} the empty state\n   */\n  ;\n\n  _proto.getEmptyState = function getEmptyState() {\n    return this.getDatabase().getEmptyState();\n  }\n  /**\n   * Begins an immutable database session.\n   *\n   * @param  {Object} state  - the state the database manages\n   * @return {Session} a new {@link Session} instance\n   */\n  ;\n\n  _proto.session = function session(state) {\n    return new Session(this, this.getDatabase(), state);\n  }\n  /**\n   * Begins a mutable database session.\n   *\n   * @param  {Object} state  - the state the database manages\n   * @return {Session} a new {@link Session} instance\n   */\n  ;\n\n  _proto.mutableSession = function mutableSession(state) {\n    return new Session(this, this.getDatabase(), state, true);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto._setupModelPrototypes = function _setupModelPrototypes(models) {\n    var _this3 = this;\n\n    models.filter(function (model) {\n      return !model.isSetUp;\n    }).forEach(function (model) {\n      var fields = model.fields,\n          modelName = model.modelName,\n          querySetClass = model.querySetClass;\n      Object.entries(fields).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            fieldName = _ref4[0],\n            field = _ref4[1];\n\n        if (!(field instanceof Field)) {\n          throw new Error(\"\".concat(modelName, \".\").concat(fieldName, \" is of type \\\"\").concat(_typeof(field), \"\\\" \") + \"but must be an instance of Field. Please use the \" + \"`attr`, `fk`, `oneToOne` and `many` \" + \"functions to define fields.\");\n        }\n\n        if (!_this3._isFieldInstalled(modelName, fieldName)) {\n          _this3._installField(field, fieldName, model);\n\n          _this3._setFieldInstalled(modelName, fieldName);\n        }\n      });\n      attachQuerySetMethods(model, querySetClass);\n      model.isSetUp = true;\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto._isFieldInstalled = function _isFieldInstalled(modelName, fieldName) {\n    return this.installedFields.hasOwnProperty(modelName) ? !!this.installedFields[modelName][fieldName] : false;\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto._setFieldInstalled = function _setFieldInstalled(modelName, fieldName) {\n    if (!this.installedFields.hasOwnProperty(modelName)) {\n      this.installedFields[modelName] = {};\n    }\n\n    this.installedFields[modelName][fieldName] = true;\n  }\n  /**\n   * Installs a field on a model and its related models if necessary.\n   * @private\n   */\n  ;\n\n  _proto._installField = function _installField(field, fieldName, model) {\n    var FieldInstaller = field.installerClass;\n    new FieldInstaller({\n      field: field,\n      fieldName: fieldName,\n      model: model,\n      orm: this\n    }).run();\n  } // DEPRECATED AND REMOVED METHODS\n\n  /**\n   * @deprecated Use {@link ORM#mutableSession} instead.\n   */\n  ;\n\n  _proto.withMutations = function withMutations(state) {\n    warnDeprecated(\"`ORM.prototype.withMutations` has been deprecated. \" + \"Use `ORM.prototype.mutableSession` instead.\");\n    return this.mutableSession(state);\n  }\n  /**\n   * @deprecated Use {@link ORM#session} instead.\n   */\n  ;\n\n  _proto.from = function from(state) {\n    warnDeprecated(\"`ORM.prototype.from` has been deprecated. \" + \"Use `ORM.prototype.session` instead.\");\n    return this.session(state);\n  }\n  /**\n   * @deprecated Use {@link ORM#getEmptyState} instead.\n   */\n  ;\n\n  _proto.getDefaultState = function getDefaultState() {\n    warnDeprecated(\"`ORM.prototype.getDefaultState` has been deprecated. Use \" + \"`ORM.prototype.getEmptyState` instead.\");\n    return this.getEmptyState();\n  }\n  /**\n   * @deprecated Define a Model class instead.\n   */\n  ;\n\n  _proto.define = function define() {\n    throw new Error(\"`ORM.prototype.define` has been removed. Please define a Model class.\");\n  };\n\n  return ORM;\n}();\n\nexport function DeprecatedSchema() {\n  throw new Error(\"Schema has been renamed to ORM. Please import ORM instead of Schema \" + \"from Redux-ORM.\");\n}\nexport { ORM };\nexport default ORM;","map":{"version":3,"names":["_typeof","_createClass","_inheritsLoose","_slicedToArray","_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Session","Model","createDatabase","defaultCreateDatabase","attr","Field","ForeignKey","ManyToMany","createModelSelectorSpec","m2mName","attachQuerySetMethods","m2mToFieldName","m2mFromFieldName","warnDeprecated","ORM_DEFAULTS","RESERVED_TABLE_OPTIONS","isReservedTableOption","word","includes","ORM","opts","_ORM_DEFAULTS","registry","implicitThroughModels","installedFields","stateSelector","_proto","prototype","register","_this","_len","models","Array","_key","model","modelName","undefined","Error","invalidateClassCache","registerManyToManyModelsFor","get","_setupModelPrototypes","orm","_this2","fields","thisModelName","entries","_ref","_ref2","fieldName","fieldInstance","toModelName","selfReferencing","fromFieldName","toFieldName","through","throughFields","concat","_Through$fields","Through","_Model","ThroughModel","PlainForeignKey","_ForeignKey","ForeignKeyClass","id","allModels","found","values","find","getModelClasses","generateSchemaSpec","tables","reduce","spec","modelClass","tableName","tableSpec","tableOptions","getDatabase","db","getEmptyState","session","state","mutableSession","_this3","isSetUp","querySetClass","_ref3","_ref4","field","_isFieldInstalled","_installField","_setFieldInstalled","hasOwnProperty","FieldInstaller","installerClass","run","withMutations","from","getDefaultState","define","DeprecatedSchema"],"sources":["/Users/developer/task/task3/node_modules/redux-orm/es/ORM.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable max-classes-per-file */\nimport Session from \"./Session\";\nimport Model from \"./Model\";\nimport { createDatabase as defaultCreateDatabase } from \"./db\";\nimport { attr } from \"./fields\";\nimport Field from \"./fields/Field\";\nimport ForeignKey from \"./fields/ForeignKey\";\nimport ManyToMany from \"./fields/ManyToMany\";\nimport { createModelSelectorSpec } from \"./selectors\";\nimport { m2mName, attachQuerySetMethods, m2mToFieldName, m2mFromFieldName, warnDeprecated } from \"./utils\";\nvar ORM_DEFAULTS = {\n  createDatabase: defaultCreateDatabase\n};\nvar RESERVED_TABLE_OPTIONS = [\"indexes\", \"meta\"];\n\nvar isReservedTableOption = function isReservedTableOption(word) {\n  return RESERVED_TABLE_OPTIONS.includes(word);\n};\n/**\n * ORM - the Object Relational Mapper.\n *\n * Use instances of this class to:\n *\n * - Register your {@link Model} classes using {@link ORM#register}\n * - Get the empty state for the underlying database with {@link ORM#getEmptyState}\n * - Start an immutable database session with {@link ORM#session}\n * - Start a mutating database session with {@link ORM#mutableSession}\n *\n * Internally, this class handles generating a schema specification from models\n * to the database.\n */\n\n\nvar ORM = /*#__PURE__*/function () {\n  /**\n   * Creates a new ORM instance.\n   *\n   * @param {Object} [opts]\n   * @param {Function} [opts.stateSelector] - function that given a Redux state tree\n   *                                          will return the ORM state's subtree,\n   *                                          e.g. `state => state.orm`\n   *                                          (necessary if you want to use selectors)\n   * @param {Function} [opts.createDatabase] - function that creates a database\n   */\n  function ORM(opts) {\n    var _ORM_DEFAULTS = _objectSpread(_objectSpread({}, ORM_DEFAULTS), opts || {}),\n        createDatabase = _ORM_DEFAULTS.createDatabase;\n\n    this.createDatabase = createDatabase;\n    this.registry = [];\n    this.implicitThroughModels = [];\n    this.installedFields = {};\n    this.stateSelector = opts ? opts.stateSelector : null;\n  }\n  /**\n   * Registers a {@link Model} class to the ORM.\n   *\n   * If the model has declared any ManyToMany fields, their\n   * through models will be generated and registered with\n   * this call, unless a custom through model has been specified.\n   *\n   * @param  {...Model} models - a {@link Model} class to register\n   * @return {undefined}\n   */\n\n\n  var _proto = ORM.prototype;\n\n  _proto.register = function register() {\n    var _this = this;\n\n    for (var _len = arguments.length, models = new Array(_len), _key = 0; _key < _len; _key++) {\n      models[_key] = arguments[_key];\n    }\n\n    models.forEach(function (model) {\n      if (model.modelName === undefined) {\n        throw new Error(\"A model was passed that doesn't have a modelName set\");\n      }\n\n      model.invalidateClassCache();\n\n      _this.registerManyToManyModelsFor(model);\n\n      _this.registry.push(model);\n\n      Object.defineProperty(_this, model.modelName, {\n        get: function get() {\n          // make sure virtualFields are set up\n          _this._setupModelPrototypes(_this.registry);\n\n          return createModelSelectorSpec({\n            model: model,\n            orm: _this\n          });\n        }\n      });\n    });\n  };\n\n  _proto.registerManyToManyModelsFor = function registerManyToManyModelsFor(model) {\n    var _this2 = this;\n\n    var fields = model.fields;\n    var thisModelName = model.modelName;\n    Object.entries(fields).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          fieldName = _ref2[0],\n          fieldInstance = _ref2[1];\n\n      if (!(fieldInstance instanceof ManyToMany)) {\n        return;\n      }\n\n      var toModelName;\n\n      if (fieldInstance.toModelName === \"this\") {\n        toModelName = thisModelName;\n      } else {\n        toModelName = fieldInstance.toModelName; // eslint-disable-line prefer-destructuring\n      }\n\n      var selfReferencing = thisModelName === toModelName;\n      var fromFieldName = m2mFromFieldName(thisModelName);\n      var toFieldName = m2mToFieldName(toModelName);\n\n      if (fieldInstance.through) {\n        if (selfReferencing && !fieldInstance.throughFields) {\n          throw new Error(\"Self-referencing many-to-many relationship at \" + \"\\\"\".concat(thisModelName, \".\").concat(fieldName, \"\\\" using custom \") + \"model \\\"\".concat(fieldInstance.through, \"\\\" has no \") + \"throughFields key. Cannot determine which \" + \"fields reference the instances partaking \" + \"in the relationship.\");\n        }\n      } else {\n        var _Through$fields;\n\n        var Through = /*#__PURE__*/function (_Model) {\n          _inheritsLoose(ThroughModel, _Model);\n\n          function ThroughModel() {\n            return _Model.apply(this, arguments) || this;\n          }\n\n          return ThroughModel;\n        }(Model);\n\n        Through.modelName = m2mName(thisModelName, fieldName);\n\n        var PlainForeignKey = /*#__PURE__*/function (_ForeignKey) {\n          _inheritsLoose(PlainForeignKey, _ForeignKey);\n\n          function PlainForeignKey() {\n            return _ForeignKey.apply(this, arguments) || this;\n          }\n\n          _createClass(PlainForeignKey, [{\n            key: \"installsBackwardsVirtualField\",\n            get: function get() {\n              return false;\n            }\n          }, {\n            key: \"installsBackwardsDescriptor\",\n            get: function get() {\n              return false;\n            }\n          }]);\n\n          return PlainForeignKey;\n        }(ForeignKey);\n\n        var ForeignKeyClass = selfReferencing ? PlainForeignKey : ForeignKey;\n        Through.fields = (_Through$fields = {\n          id: attr()\n        }, _defineProperty(_Through$fields, fromFieldName, new ForeignKeyClass(thisModelName)), _defineProperty(_Through$fields, toFieldName, new ForeignKeyClass(toModelName)), _Through$fields);\n        Through.invalidateClassCache();\n\n        _this2.implicitThroughModels.push(Through);\n      }\n    });\n  }\n  /**\n   * Gets a {@link Model} class by its name from the registry.\n   * @param  {string} modelName - the name of the {@link Model} class to get\n   * @throws If {@link Model} class is not found.\n   * @return {Model} the {@link Model} class, if found\n   */\n  ;\n\n  _proto.get = function get(modelName) {\n    var allModels = this.registry.concat(this.implicitThroughModels);\n    var found = Object.values(allModels).find(function (model) {\n      return model.modelName === modelName;\n    });\n\n    if (typeof found === \"undefined\") {\n      throw new Error(\"Did not find model \".concat(modelName, \" from registry.\"));\n    }\n\n    return found;\n  };\n\n  _proto.getModelClasses = function getModelClasses() {\n    this._setupModelPrototypes(this.registry);\n\n    this._setupModelPrototypes(this.implicitThroughModels);\n\n    return this.registry.concat(this.implicitThroughModels);\n  };\n\n  _proto.generateSchemaSpec = function generateSchemaSpec() {\n    var models = this.getModelClasses();\n    var tables = models.reduce(function (spec, modelClass) {\n      var tableName = modelClass.modelName;\n      var tableSpec = modelClass.tableOptions();\n      Object.keys(tableSpec).filter(isReservedTableOption).forEach(function (key) {\n        throw new Error(\"Reserved keyword `\".concat(key, \"` used in \").concat(tableName, \".options.\"));\n      });\n      spec[tableName] = _objectSpread({\n        fields: _objectSpread({}, modelClass.fields)\n      }, tableSpec);\n      return spec;\n    }, {});\n    return {\n      tables: tables\n    };\n  };\n\n  _proto.getDatabase = function getDatabase() {\n    if (!this.db) {\n      this.db = this.createDatabase(this.generateSchemaSpec());\n    }\n\n    return this.db;\n  }\n  /**\n   * Returns the empty database state.\n   * @return {Object} the empty state\n   */\n  ;\n\n  _proto.getEmptyState = function getEmptyState() {\n    return this.getDatabase().getEmptyState();\n  }\n  /**\n   * Begins an immutable database session.\n   *\n   * @param  {Object} state  - the state the database manages\n   * @return {Session} a new {@link Session} instance\n   */\n  ;\n\n  _proto.session = function session(state) {\n    return new Session(this, this.getDatabase(), state);\n  }\n  /**\n   * Begins a mutable database session.\n   *\n   * @param  {Object} state  - the state the database manages\n   * @return {Session} a new {@link Session} instance\n   */\n  ;\n\n  _proto.mutableSession = function mutableSession(state) {\n    return new Session(this, this.getDatabase(), state, true);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto._setupModelPrototypes = function _setupModelPrototypes(models) {\n    var _this3 = this;\n\n    models.filter(function (model) {\n      return !model.isSetUp;\n    }).forEach(function (model) {\n      var fields = model.fields,\n          modelName = model.modelName,\n          querySetClass = model.querySetClass;\n      Object.entries(fields).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            fieldName = _ref4[0],\n            field = _ref4[1];\n\n        if (!(field instanceof Field)) {\n          throw new Error(\"\".concat(modelName, \".\").concat(fieldName, \" is of type \\\"\").concat(_typeof(field), \"\\\" \") + \"but must be an instance of Field. Please use the \" + \"`attr`, `fk`, `oneToOne` and `many` \" + \"functions to define fields.\");\n        }\n\n        if (!_this3._isFieldInstalled(modelName, fieldName)) {\n          _this3._installField(field, fieldName, model);\n\n          _this3._setFieldInstalled(modelName, fieldName);\n        }\n      });\n      attachQuerySetMethods(model, querySetClass);\n      model.isSetUp = true;\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto._isFieldInstalled = function _isFieldInstalled(modelName, fieldName) {\n    return this.installedFields.hasOwnProperty(modelName) ? !!this.installedFields[modelName][fieldName] : false;\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto._setFieldInstalled = function _setFieldInstalled(modelName, fieldName) {\n    if (!this.installedFields.hasOwnProperty(modelName)) {\n      this.installedFields[modelName] = {};\n    }\n\n    this.installedFields[modelName][fieldName] = true;\n  }\n  /**\n   * Installs a field on a model and its related models if necessary.\n   * @private\n   */\n  ;\n\n  _proto._installField = function _installField(field, fieldName, model) {\n    var FieldInstaller = field.installerClass;\n    new FieldInstaller({\n      field: field,\n      fieldName: fieldName,\n      model: model,\n      orm: this\n    }).run();\n  } // DEPRECATED AND REMOVED METHODS\n\n  /**\n   * @deprecated Use {@link ORM#mutableSession} instead.\n   */\n  ;\n\n  _proto.withMutations = function withMutations(state) {\n    warnDeprecated(\"`ORM.prototype.withMutations` has been deprecated. \" + \"Use `ORM.prototype.mutableSession` instead.\");\n    return this.mutableSession(state);\n  }\n  /**\n   * @deprecated Use {@link ORM#session} instead.\n   */\n  ;\n\n  _proto.from = function from(state) {\n    warnDeprecated(\"`ORM.prototype.from` has been deprecated. \" + \"Use `ORM.prototype.session` instead.\");\n    return this.session(state);\n  }\n  /**\n   * @deprecated Use {@link ORM#getEmptyState} instead.\n   */\n  ;\n\n  _proto.getDefaultState = function getDefaultState() {\n    warnDeprecated(\"`ORM.prototype.getDefaultState` has been deprecated. Use \" + \"`ORM.prototype.getEmptyState` instead.\");\n    return this.getEmptyState();\n  }\n  /**\n   * @deprecated Define a Model class instead.\n   */\n  ;\n\n  _proto.define = function define() {\n    throw new Error(\"`ORM.prototype.define` has been removed. Please define a Model class.\");\n  };\n\n  return ORM;\n}();\n\nexport function DeprecatedSchema() {\n  throw new Error(\"Schema has been renamed to ORM. Please import ORM instead of Schema \" + \"from Redux-ORM.\");\n}\nexport { ORM };\nexport default ORM;"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,+BAApB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;EAAE,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;EAAgC,IAAIG,MAAM,CAACC,qBAAX,EAAkC;IAAE,IAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;IAAoD,IAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;MAAE,OAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;IAAiE,CAAjG,CAAV;IAA8GP,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;EAAiC;;EAAC,OAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;IAAuD,IAAIA,CAAC,GAAG,CAAR,EAAW;MAAEf,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;QAAErB,eAAe,CAACe,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;MAA4C,CAAnG;IAAuG,CAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;MAAEjB,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;IAA4E,CAApH,MAA0H;MAAElB,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;QAAEhB,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;MAAmF,CAApI;IAAwI;EAAE;;EAAC,OAAON,MAAP;AAAgB;AAEthB;;;AACA,OAAOU,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,cAAc,IAAIC,qBAA3B,QAAwD,MAAxD;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,uBAAT,QAAwC,aAAxC;AACA,SAASC,OAAT,EAAkBC,qBAAlB,EAAyCC,cAAzC,EAAyDC,gBAAzD,EAA2EC,cAA3E,QAAiG,SAAjG;AACA,IAAIC,YAAY,GAAG;EACjBZ,cAAc,EAAEC;AADC,CAAnB;AAGA,IAAIY,sBAAsB,GAAG,CAAC,SAAD,EAAY,MAAZ,CAA7B;;AAEA,IAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,IAA/B,EAAqC;EAC/D,OAAOF,sBAAsB,CAACG,QAAvB,CAAgCD,IAAhC,CAAP;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIE,GAAG,GAAG,aAAa,YAAY;EACjC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,GAAT,CAAaC,IAAb,EAAmB;IACjB,IAAIC,aAAa,GAAGhC,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKyB,YAAL,CAAd,EAAkCM,IAAI,IAAI,EAA1C,CAAjC;IAAA,IACIlB,cAAc,GAAGmB,aAAa,CAACnB,cADnC;;IAGA,KAAKA,cAAL,GAAsBA,cAAtB;IACA,KAAKoB,QAAL,GAAgB,EAAhB;IACA,KAAKC,qBAAL,GAA6B,EAA7B;IACA,KAAKC,eAAL,GAAuB,EAAvB;IACA,KAAKC,aAAL,GAAqBL,IAAI,GAAGA,IAAI,CAACK,aAAR,GAAwB,IAAjD;EACD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAGE,IAAIC,MAAM,GAAGP,GAAG,CAACQ,SAAjB;;EAEAD,MAAM,CAACE,QAAP,GAAkB,SAASA,QAAT,GAAoB;IACpC,IAAIC,KAAK,GAAG,IAAZ;;IAEA,KAAK,IAAIC,IAAI,GAAGtC,SAAS,CAACC,MAArB,EAA6BsC,MAAM,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAAtC,EAAuDG,IAAI,GAAG,CAAnE,EAAsEA,IAAI,GAAGH,IAA7E,EAAmFG,IAAI,EAAvF,EAA2F;MACzFF,MAAM,CAACE,IAAD,CAAN,GAAezC,SAAS,CAACyC,IAAD,CAAxB;IACD;;IAEDF,MAAM,CAACpC,OAAP,CAAe,UAAUuC,KAAV,EAAiB;MAC9B,IAAIA,KAAK,CAACC,SAAN,KAAoBC,SAAxB,EAAmC;QACjC,MAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;MACD;;MAEDH,KAAK,CAACI,oBAAN;;MAEAT,KAAK,CAACU,2BAAN,CAAkCL,KAAlC;;MAEAL,KAAK,CAACP,QAAN,CAAenC,IAAf,CAAoB+C,KAApB;;MAEAtD,MAAM,CAACmB,cAAP,CAAsB8B,KAAtB,EAA6BK,KAAK,CAACC,SAAnC,EAA8C;QAC5CK,GAAG,EAAE,SAASA,GAAT,GAAe;UAClB;UACAX,KAAK,CAACY,qBAAN,CAA4BZ,KAAK,CAACP,QAAlC;;UAEA,OAAOd,uBAAuB,CAAC;YAC7B0B,KAAK,EAAEA,KADsB;YAE7BQ,GAAG,EAAEb;UAFwB,CAAD,CAA9B;QAID;MAT2C,CAA9C;IAWD,CAtBD;EAuBD,CA9BD;;EAgCAH,MAAM,CAACa,2BAAP,GAAqC,SAASA,2BAAT,CAAqCL,KAArC,EAA4C;IAC/E,IAAIS,MAAM,GAAG,IAAb;;IAEA,IAAIC,MAAM,GAAGV,KAAK,CAACU,MAAnB;IACA,IAAIC,aAAa,GAAGX,KAAK,CAACC,SAA1B;IACAvD,MAAM,CAACkE,OAAP,CAAeF,MAAf,EAAuBjD,OAAvB,CAA+B,UAAUoD,IAAV,EAAgB;MAC7C,IAAIC,KAAK,GAAG1E,cAAc,CAACyE,IAAD,EAAO,CAAP,CAA1B;MAAA,IACIE,SAAS,GAAGD,KAAK,CAAC,CAAD,CADrB;MAAA,IAEIE,aAAa,GAAGF,KAAK,CAAC,CAAD,CAFzB;;MAIA,IAAI,EAAEE,aAAa,YAAY3C,UAA3B,CAAJ,EAA4C;QAC1C;MACD;;MAED,IAAI4C,WAAJ;;MAEA,IAAID,aAAa,CAACC,WAAd,KAA8B,MAAlC,EAA0C;QACxCA,WAAW,GAAGN,aAAd;MACD,CAFD,MAEO;QACLM,WAAW,GAAGD,aAAa,CAACC,WAA5B,CADK,CACoC;MAC1C;;MAED,IAAIC,eAAe,GAAGP,aAAa,KAAKM,WAAxC;MACA,IAAIE,aAAa,GAAGzC,gBAAgB,CAACiC,aAAD,CAApC;MACA,IAAIS,WAAW,GAAG3C,cAAc,CAACwC,WAAD,CAAhC;;MAEA,IAAID,aAAa,CAACK,OAAlB,EAA2B;QACzB,IAAIH,eAAe,IAAI,CAACF,aAAa,CAACM,aAAtC,EAAqD;UACnD,MAAM,IAAInB,KAAJ,CAAU,mDAAmD,KAAKoB,MAAL,CAAYZ,aAAZ,EAA2B,GAA3B,EAAgCY,MAAhC,CAAuCR,SAAvC,EAAkD,kBAAlD,CAAnD,GAA2H,WAAWQ,MAAX,CAAkBP,aAAa,CAACK,OAAhC,EAAyC,YAAzC,CAA3H,GAAoL,4CAApL,GAAmO,2CAAnO,GAAiR,sBAA3R,CAAN;QACD;MACF,CAJD,MAIO;QACL,IAAIG,eAAJ;;QAEA,IAAIC,OAAO,GAAG,aAAa,UAAUC,MAAV,EAAkB;UAC3CvF,cAAc,CAACwF,YAAD,EAAeD,MAAf,CAAd;;UAEA,SAASC,YAAT,GAAwB;YACtB,OAAOD,MAAM,CAACxE,KAAP,CAAa,IAAb,EAAmBI,SAAnB,KAAiC,IAAxC;UACD;;UAED,OAAOqE,YAAP;QACD,CAR0B,CAQzB5D,KARyB,CAA3B;;QAUA0D,OAAO,CAACxB,SAAR,GAAoB1B,OAAO,CAACoC,aAAD,EAAgBI,SAAhB,CAA3B;;QAEA,IAAIa,eAAe,GAAG,aAAa,UAAUC,WAAV,EAAuB;UACxD1F,cAAc,CAACyF,eAAD,EAAkBC,WAAlB,CAAd;;UAEA,SAASD,eAAT,GAA2B;YACzB,OAAOC,WAAW,CAAC3E,KAAZ,CAAkB,IAAlB,EAAwBI,SAAxB,KAAsC,IAA7C;UACD;;UAEDpB,YAAY,CAAC0F,eAAD,EAAkB,CAAC;YAC7BlE,GAAG,EAAE,+BADwB;YAE7B4C,GAAG,EAAE,SAASA,GAAT,GAAe;cAClB,OAAO,KAAP;YACD;UAJ4B,CAAD,EAK3B;YACD5C,GAAG,EAAE,6BADJ;YAED4C,GAAG,EAAE,SAASA,GAAT,GAAe;cAClB,OAAO,KAAP;YACD;UAJA,CAL2B,CAAlB,CAAZ;;UAYA,OAAOsB,eAAP;QACD,CApBkC,CAoBjCxD,UApBiC,CAAnC;;QAsBA,IAAI0D,eAAe,GAAGZ,eAAe,GAAGU,eAAH,GAAqBxD,UAA1D;QACAqD,OAAO,CAACf,MAAR,IAAkBc,eAAe,GAAG;UAClCO,EAAE,EAAE7D,IAAI;QAD0B,CAAlB,EAEf7B,eAAe,CAACmF,eAAD,EAAkBL,aAAlB,EAAiC,IAAIW,eAAJ,CAAoBnB,aAApB,CAAjC,CAFA,EAEsEtE,eAAe,CAACmF,eAAD,EAAkBJ,WAAlB,EAA+B,IAAIU,eAAJ,CAAoBb,WAApB,CAA/B,CAFrF,EAEuJO,eAFzK;QAGAC,OAAO,CAACrB,oBAAR;;QAEAK,MAAM,CAACpB,qBAAP,CAA6BpC,IAA7B,CAAkCwE,OAAlC;MACD;IACF,CAtED;EAuED;EACD;AACF;AACA;AACA;AACA;AACA;EAlFE;;EAqFAjC,MAAM,CAACc,GAAP,GAAa,SAASA,GAAT,CAAaL,SAAb,EAAwB;IACnC,IAAI+B,SAAS,GAAG,KAAK5C,QAAL,CAAcmC,MAAd,CAAqB,KAAKlC,qBAA1B,CAAhB;IACA,IAAI4C,KAAK,GAAGvF,MAAM,CAACwF,MAAP,CAAcF,SAAd,EAAyBG,IAAzB,CAA8B,UAAUnC,KAAV,EAAiB;MACzD,OAAOA,KAAK,CAACC,SAAN,KAAoBA,SAA3B;IACD,CAFW,CAAZ;;IAIA,IAAI,OAAOgC,KAAP,KAAiB,WAArB,EAAkC;MAChC,MAAM,IAAI9B,KAAJ,CAAU,sBAAsBoB,MAAtB,CAA6BtB,SAA7B,EAAwC,iBAAxC,CAAV,CAAN;IACD;;IAED,OAAOgC,KAAP;EACD,CAXD;;EAaAzC,MAAM,CAAC4C,eAAP,GAAyB,SAASA,eAAT,GAA2B;IAClD,KAAK7B,qBAAL,CAA2B,KAAKnB,QAAhC;;IAEA,KAAKmB,qBAAL,CAA2B,KAAKlB,qBAAhC;;IAEA,OAAO,KAAKD,QAAL,CAAcmC,MAAd,CAAqB,KAAKlC,qBAA1B,CAAP;EACD,CAND;;EAQAG,MAAM,CAAC6C,kBAAP,GAA4B,SAASA,kBAAT,GAA8B;IACxD,IAAIxC,MAAM,GAAG,KAAKuC,eAAL,EAAb;IACA,IAAIE,MAAM,GAAGzC,MAAM,CAAC0C,MAAP,CAAc,UAAUC,IAAV,EAAgBC,UAAhB,EAA4B;MACrD,IAAIC,SAAS,GAAGD,UAAU,CAACxC,SAA3B;MACA,IAAI0C,SAAS,GAAGF,UAAU,CAACG,YAAX,EAAhB;MACAlG,MAAM,CAACD,IAAP,CAAYkG,SAAZ,EAAuB9F,MAAvB,CAA8BiC,qBAA9B,EAAqDrB,OAArD,CAA6D,UAAUC,GAAV,EAAe;QAC1E,MAAM,IAAIyC,KAAJ,CAAU,qBAAqBoB,MAArB,CAA4B7D,GAA5B,EAAiC,YAAjC,EAA+C6D,MAA/C,CAAsDmB,SAAtD,EAAiE,WAAjE,CAAV,CAAN;MACD,CAFD;MAGAF,IAAI,CAACE,SAAD,CAAJ,GAAkBvF,aAAa,CAAC;QAC9BuD,MAAM,EAAEvD,aAAa,CAAC,EAAD,EAAKsF,UAAU,CAAC/B,MAAhB;MADS,CAAD,EAE5BiC,SAF4B,CAA/B;MAGA,OAAOH,IAAP;IACD,CAVY,EAUV,EAVU,CAAb;IAWA,OAAO;MACLF,MAAM,EAAEA;IADH,CAAP;EAGD,CAhBD;;EAkBA9C,MAAM,CAACqD,WAAP,GAAqB,SAASA,WAAT,GAAuB;IAC1C,IAAI,CAAC,KAAKC,EAAV,EAAc;MACZ,KAAKA,EAAL,GAAU,KAAK9E,cAAL,CAAoB,KAAKqE,kBAAL,EAApB,CAAV;IACD;;IAED,OAAO,KAAKS,EAAZ;EACD;EACD;AACF;AACA;AACA;EAVE;;EAaAtD,MAAM,CAACuD,aAAP,GAAuB,SAASA,aAAT,GAAyB;IAC9C,OAAO,KAAKF,WAAL,GAAmBE,aAAnB,EAAP;EACD;EACD;AACF;AACA;AACA;AACA;AACA;EARE;;EAWAvD,MAAM,CAACwD,OAAP,GAAiB,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;IACvC,OAAO,IAAInF,OAAJ,CAAY,IAAZ,EAAkB,KAAK+E,WAAL,EAAlB,EAAsCI,KAAtC,CAAP;EACD;EACD;AACF;AACA;AACA;AACA;AACA;EARE;;EAWAzD,MAAM,CAAC0D,cAAP,GAAwB,SAASA,cAAT,CAAwBD,KAAxB,EAA+B;IACrD,OAAO,IAAInF,OAAJ,CAAY,IAAZ,EAAkB,KAAK+E,WAAL,EAAlB,EAAsCI,KAAtC,EAA6C,IAA7C,CAAP;EACD;EACD;AACF;AACA;EALE;;EAQAzD,MAAM,CAACe,qBAAP,GAA+B,SAASA,qBAAT,CAA+BV,MAA/B,EAAuC;IACpE,IAAIsD,MAAM,GAAG,IAAb;;IAEAtD,MAAM,CAAChD,MAAP,CAAc,UAAUmD,KAAV,EAAiB;MAC7B,OAAO,CAACA,KAAK,CAACoD,OAAd;IACD,CAFD,EAEG3F,OAFH,CAEW,UAAUuC,KAAV,EAAiB;MAC1B,IAAIU,MAAM,GAAGV,KAAK,CAACU,MAAnB;MAAA,IACIT,SAAS,GAAGD,KAAK,CAACC,SADtB;MAAA,IAEIoD,aAAa,GAAGrD,KAAK,CAACqD,aAF1B;MAGA3G,MAAM,CAACkE,OAAP,CAAeF,MAAf,EAAuBjD,OAAvB,CAA+B,UAAU6F,KAAV,EAAiB;QAC9C,IAAIC,KAAK,GAAGnH,cAAc,CAACkH,KAAD,EAAQ,CAAR,CAA1B;QAAA,IACIvC,SAAS,GAAGwC,KAAK,CAAC,CAAD,CADrB;QAAA,IAEIC,KAAK,GAAGD,KAAK,CAAC,CAAD,CAFjB;;QAIA,IAAI,EAAEC,KAAK,YAAYrF,KAAnB,CAAJ,EAA+B;UAC7B,MAAM,IAAIgC,KAAJ,CAAU,GAAGoB,MAAH,CAAUtB,SAAV,EAAqB,GAArB,EAA0BsB,MAA1B,CAAiCR,SAAjC,EAA4C,gBAA5C,EAA8DQ,MAA9D,CAAqEtF,OAAO,CAACuH,KAAD,CAA5E,EAAqF,KAArF,IAA8F,mDAA9F,GAAoJ,sCAApJ,GAA6L,6BAAvM,CAAN;QACD;;QAED,IAAI,CAACL,MAAM,CAACM,iBAAP,CAAyBxD,SAAzB,EAAoCc,SAApC,CAAL,EAAqD;UACnDoC,MAAM,CAACO,aAAP,CAAqBF,KAArB,EAA4BzC,SAA5B,EAAuCf,KAAvC;;UAEAmD,MAAM,CAACQ,kBAAP,CAA0B1D,SAA1B,EAAqCc,SAArC;QACD;MACF,CAdD;MAeAvC,qBAAqB,CAACwB,KAAD,EAAQqD,aAAR,CAArB;MACArD,KAAK,CAACoD,OAAN,GAAgB,IAAhB;IACD,CAvBD;EAwBD;EACD;AACF;AACA;EA9BE;;EAiCA5D,MAAM,CAACiE,iBAAP,GAA2B,SAASA,iBAAT,CAA2BxD,SAA3B,EAAsCc,SAAtC,EAAiD;IAC1E,OAAO,KAAKzB,eAAL,CAAqBsE,cAArB,CAAoC3D,SAApC,IAAiD,CAAC,CAAC,KAAKX,eAAL,CAAqBW,SAArB,EAAgCc,SAAhC,CAAnD,GAAgG,KAAvG;EACD;EACD;AACF;AACA;EALE;;EAQAvB,MAAM,CAACmE,kBAAP,GAA4B,SAASA,kBAAT,CAA4B1D,SAA5B,EAAuCc,SAAvC,EAAkD;IAC5E,IAAI,CAAC,KAAKzB,eAAL,CAAqBsE,cAArB,CAAoC3D,SAApC,CAAL,EAAqD;MACnD,KAAKX,eAAL,CAAqBW,SAArB,IAAkC,EAAlC;IACD;;IAED,KAAKX,eAAL,CAAqBW,SAArB,EAAgCc,SAAhC,IAA6C,IAA7C;EACD;EACD;AACF;AACA;AACA;EAVE;;EAaAvB,MAAM,CAACkE,aAAP,GAAuB,SAASA,aAAT,CAAuBF,KAAvB,EAA8BzC,SAA9B,EAAyCf,KAAzC,EAAgD;IACrE,IAAI6D,cAAc,GAAGL,KAAK,CAACM,cAA3B;IACA,IAAID,cAAJ,CAAmB;MACjBL,KAAK,EAAEA,KADU;MAEjBzC,SAAS,EAAEA,SAFM;MAGjBf,KAAK,EAAEA,KAHU;MAIjBQ,GAAG,EAAE;IAJY,CAAnB,EAKGuD,GALH;EAMD,CARD,CAQE;;EAEF;AACF;AACA;EAZE;;EAeAvE,MAAM,CAACwE,aAAP,GAAuB,SAASA,aAAT,CAAuBf,KAAvB,EAA8B;IACnDtE,cAAc,CAAC,wDAAwD,6CAAzD,CAAd;IACA,OAAO,KAAKuE,cAAL,CAAoBD,KAApB,CAAP;EACD;EACD;AACF;AACA;EANE;;EASAzD,MAAM,CAACyE,IAAP,GAAc,SAASA,IAAT,CAAchB,KAAd,EAAqB;IACjCtE,cAAc,CAAC,+CAA+C,sCAAhD,CAAd;IACA,OAAO,KAAKqE,OAAL,CAAaC,KAAb,CAAP;EACD;EACD;AACF;AACA;EANE;;EASAzD,MAAM,CAAC0E,eAAP,GAAyB,SAASA,eAAT,GAA2B;IAClDvF,cAAc,CAAC,8DAA8D,wCAA/D,CAAd;IACA,OAAO,KAAKoE,aAAL,EAAP;EACD;EACD;AACF;AACA;EANE;;EASAvD,MAAM,CAAC2E,MAAP,GAAgB,SAASA,MAAT,GAAkB;IAChC,MAAM,IAAIhE,KAAJ,CAAU,uEAAV,CAAN;EACD,CAFD;;EAIA,OAAOlB,GAAP;AACD,CA/UsB,EAAvB;;AAiVA,OAAO,SAASmF,gBAAT,GAA4B;EACjC,MAAM,IAAIjE,KAAJ,CAAU,yEAAyE,iBAAnF,CAAN;AACD;AACD,SAASlB,GAAT;AACA,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
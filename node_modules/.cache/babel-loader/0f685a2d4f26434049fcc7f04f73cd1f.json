{"ast":null,"code":"import { createAction } from \"@reduxjs/toolkit\";\nimport Model, { attr } from \"redux-orm\"; // =====ACTIONS=====\n\nexport const createUser = createAction(\"models/users/create\");\nexport const deleteUser = createAction(\"models/users/delete\"); // =====MODEL=====\n\nexport class User extends Model {\n  static get fields() {\n    return {\n      id: attr(),\n      name: attr()\n    };\n  }\n\n  static reducer(_ref, User, session) {\n    let {\n      type,\n      payload\n    } = _ref;\n\n    switch (type) {\n      case createUser.type:\n        {\n          if (!payload.id || !payload.name) {\n            console.warn(\"Unable to create a user without id or name\");\n          } else {\n            User.upsert(payload);\n          }\n\n          break;\n        }\n\n      case deleteUser.type:\n        {\n          let user = User.withId(payload);\n\n          if (user) {\n            user.delete();\n          } else {\n            console.warn(`No user found with id: ${payload}`);\n          }\n\n          break;\n        }\n\n      default:\n        break;\n    }\n  }\n\n}\nUser.modelName = \"User\";","map":{"version":3,"names":["createAction","Model","attr","createUser","deleteUser","User","fields","id","name","reducer","session","type","payload","console","warn","upsert","user","withId","delete","modelName"],"sources":["/Users/developer/task/task3/src/store/modelDucks/User.js"],"sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\nimport Model, { attr } from \"redux-orm\";\n\n// =====ACTIONS=====\nexport const createUser = createAction(\"models/users/create\");\nexport const deleteUser = createAction(\"models/users/delete\");\n\n// =====MODEL=====\nexport class User extends Model {\n  static modelName = \"User\";\n\n  static get fields() {\n    return {\n      id: attr(),\n      name: attr(),\n    };\n  }\n\n  static reducer({ type, payload }, User, session) {\n    switch (type) {\n      case createUser.type: {\n        if (!payload.id || !payload.name) {\n          console.warn(\"Unable to create a user without id or name\");\n        } else {\n          User.upsert(payload);\n        }\n        break;\n      }\n      case deleteUser.type: {\n        let user = User.withId(payload);\n        if (user) {\n          user.delete();\n        } else {\n          console.warn(`No user found with id: ${payload}`);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,WAA5B,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAGH,YAAY,CAAC,qBAAD,CAA/B;AACP,OAAO,MAAMI,UAAU,GAAGJ,YAAY,CAAC,qBAAD,CAA/B,C,CAEP;;AACA,OAAO,MAAMK,IAAN,SAAmBJ,KAAnB,CAAyB;EAGb,WAANK,MAAM,GAAG;IAClB,OAAO;MACLC,EAAE,EAAEL,IAAI,EADH;MAELM,IAAI,EAAEN,IAAI;IAFL,CAAP;EAID;;EAEa,OAAPO,OAAO,OAAoBJ,IAApB,EAA0BK,OAA1B,EAAmC;IAAA,IAAlC;MAAEC,IAAF;MAAQC;IAAR,CAAkC;;IAC/C,QAAQD,IAAR;MACE,KAAKR,UAAU,CAACQ,IAAhB;QAAsB;UACpB,IAAI,CAACC,OAAO,CAACL,EAAT,IAAe,CAACK,OAAO,CAACJ,IAA5B,EAAkC;YAChCK,OAAO,CAACC,IAAR,CAAa,4CAAb;UACD,CAFD,MAEO;YACLT,IAAI,CAACU,MAAL,CAAYH,OAAZ;UACD;;UACD;QACD;;MACD,KAAKR,UAAU,CAACO,IAAhB;QAAsB;UACpB,IAAIK,IAAI,GAAGX,IAAI,CAACY,MAAL,CAAYL,OAAZ,CAAX;;UACA,IAAII,IAAJ,EAAU;YACRA,IAAI,CAACE,MAAL;UACD,CAFD,MAEO;YACLL,OAAO,CAACC,IAAR,CAAc,0BAAyBF,OAAQ,EAA/C;UACD;;UACD;QACD;;MACD;QACE;IAnBJ;EAqBD;;AAhC6B;AAAnBP,I,CACJc,S,GAAY,M"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport MapSelectorSpec from \"./MapSelectorSpec\";\nimport ModelSelectorSpec from \"./ModelSelectorSpec\";\nimport ModelBasedSelectorSpec from \"./ModelBasedSelectorSpec\";\nimport idArgSelector from \"./idArgSelector\";\nimport QuerySet from \"../QuerySet\";\nimport Model from \"../Model\";\nimport ForeignKey from \"../fields/ForeignKey\";\nimport ManyToMany from \"../fields/ManyToMany\";\n\nvar FieldSelectorSpec = /*#__PURE__*/function (_ModelBasedSelectorSp) {\n  _inheritsLoose(FieldSelectorSpec, _ModelBasedSelectorSp);\n\n  function FieldSelectorSpec(_ref) {\n    var _this;\n\n    var field = _ref.field,\n        fieldModel = _ref.fieldModel,\n        accessorName = _ref.accessorName,\n        isVirtual = _ref.isVirtual,\n        other = _objectWithoutProperties(_ref, [\"field\", \"fieldModel\", \"accessorName\", \"isVirtual\"]);\n\n    _this = _ModelBasedSelectorSp.call(this, other) || this;\n    _this._field = field;\n    _this._fieldModel = fieldModel;\n    _this._accessorName = accessorName;\n    _this._isVirtual = isVirtual;\n    return _this;\n  }\n\n  var _proto = FieldSelectorSpec.prototype;\n\n  _proto.valueForInstance = function valueForInstance(instance, session) {\n    if (!instance) {\n      return null;\n    }\n\n    var value;\n\n    if (this._parent instanceof ModelSelectorSpec) {\n      /* orm.Model.field */\n      value = instance[this._accessorName];\n    } else {\n      /* orm.Model.field1.field2..fieldN.field */\n      var ParentToModel = session[this._parent.toModelName];\n\n      var parentRef = this._parent.valueForInstance(instance, session);\n\n      var parentInstance = parentRef ? new ParentToModel(parentRef) : null;\n      value = parentInstance ? parentInstance[this._accessorName] : null;\n    }\n\n    if (value instanceof Model) {\n      return value.ref;\n    }\n\n    if (value instanceof QuerySet) {\n      return value.toRefArray();\n    }\n\n    return value;\n  };\n\n  _proto.map = function map(selector) {\n    if (selector instanceof ModelSelectorSpec) {\n      if (this.toModelName === selector.model.modelName) {\n        throw new Error(\"Cannot select models in a `map()` call. If you just want the `\".concat(this._accessorName, \"` as a ref array then you can simply drop the `map()`. Otherwise make sure you're passing a field selector of the form `\").concat(this.toModelName, \".<field>` or a custom selector instead.\"));\n      } else {\n        throw new Error(\"Cannot select `\".concat(selector.model.modelName, \"` models in this `map()` call. Make sure you're passing a field selector of the form `\").concat(this.toModelName, \".<field>` or a custom selector instead.\"));\n      }\n    } else if (selector instanceof FieldSelectorSpec || selector instanceof MapSelectorSpec) {\n      if (this.toModelName !== selector.model.modelName) {\n        throw new Error(\"Cannot select fields of the `\".concat(selector.model.modelName, \"` model in this `map()` call. Make sure you're passing a field selector of the form `\").concat(this.toModelName, \".<field>` or a custom selector instead.\"));\n      }\n    } else if (!selector || typeof selector !== \"function\" || !selector.recomputations) {\n      throw new Error(\"`map()` requires a selector as an input. Received: \".concat(JSON.stringify(selector), \" of type \").concat(_typeof(selector)));\n    }\n\n    if (!(this._field instanceof ForeignKey) && !(this._field instanceof ManyToMany)) {\n      throw new Error(\"Cannot map selectors for non-collection fields\");\n    }\n\n    return new MapSelectorSpec({\n      parent: this,\n      model: this._model,\n      orm: this._orm,\n      field: this._field,\n      selector: selector\n    });\n  };\n\n  _createClass(FieldSelectorSpec, [{\n    key: \"key\",\n    get: function get() {\n      return this._accessorName;\n    }\n  }, {\n    key: \"dependencies\",\n    get: function get() {\n      return [this._orm, idArgSelector];\n    }\n  }, {\n    key: \"toModelName\",\n    get: function get() {\n      return this._field.toModelName === \"this\" ? this._fieldModel.modelName : this._field.toModelName;\n    }\n  }, {\n    key: \"toModel\",\n    get: function get() {\n      var db = this._orm.getDatabase();\n\n      return db.describe(this.toModelName);\n    }\n  }]);\n\n  return FieldSelectorSpec;\n}(ModelBasedSelectorSpec);\n\nexport { FieldSelectorSpec as default };","map":{"version":3,"names":["_typeof","_objectWithoutProperties","_createClass","_inheritsLoose","MapSelectorSpec","ModelSelectorSpec","ModelBasedSelectorSpec","idArgSelector","QuerySet","Model","ForeignKey","ManyToMany","FieldSelectorSpec","_ModelBasedSelectorSp","_ref","_this","field","fieldModel","accessorName","isVirtual","other","call","_field","_fieldModel","_accessorName","_isVirtual","_proto","prototype","valueForInstance","instance","session","value","_parent","ParentToModel","toModelName","parentRef","parentInstance","ref","toRefArray","map","selector","model","modelName","Error","concat","recomputations","JSON","stringify","parent","_model","orm","_orm","key","get","db","getDatabase","describe","default"],"sources":["/Users/developer/task/task3/node_modules/redux-orm/es/selectors/FieldSelectorSpec.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport MapSelectorSpec from \"./MapSelectorSpec\";\nimport ModelSelectorSpec from \"./ModelSelectorSpec\";\nimport ModelBasedSelectorSpec from \"./ModelBasedSelectorSpec\";\nimport idArgSelector from \"./idArgSelector\";\nimport QuerySet from \"../QuerySet\";\nimport Model from \"../Model\";\nimport ForeignKey from \"../fields/ForeignKey\";\nimport ManyToMany from \"../fields/ManyToMany\";\n\nvar FieldSelectorSpec = /*#__PURE__*/function (_ModelBasedSelectorSp) {\n  _inheritsLoose(FieldSelectorSpec, _ModelBasedSelectorSp);\n\n  function FieldSelectorSpec(_ref) {\n    var _this;\n\n    var field = _ref.field,\n        fieldModel = _ref.fieldModel,\n        accessorName = _ref.accessorName,\n        isVirtual = _ref.isVirtual,\n        other = _objectWithoutProperties(_ref, [\"field\", \"fieldModel\", \"accessorName\", \"isVirtual\"]);\n\n    _this = _ModelBasedSelectorSp.call(this, other) || this;\n    _this._field = field;\n    _this._fieldModel = fieldModel;\n    _this._accessorName = accessorName;\n    _this._isVirtual = isVirtual;\n    return _this;\n  }\n\n  var _proto = FieldSelectorSpec.prototype;\n\n  _proto.valueForInstance = function valueForInstance(instance, session) {\n    if (!instance) {\n      return null;\n    }\n\n    var value;\n\n    if (this._parent instanceof ModelSelectorSpec) {\n      /* orm.Model.field */\n      value = instance[this._accessorName];\n    } else {\n      /* orm.Model.field1.field2..fieldN.field */\n      var ParentToModel = session[this._parent.toModelName];\n\n      var parentRef = this._parent.valueForInstance(instance, session);\n\n      var parentInstance = parentRef ? new ParentToModel(parentRef) : null;\n      value = parentInstance ? parentInstance[this._accessorName] : null;\n    }\n\n    if (value instanceof Model) {\n      return value.ref;\n    }\n\n    if (value instanceof QuerySet) {\n      return value.toRefArray();\n    }\n\n    return value;\n  };\n\n  _proto.map = function map(selector) {\n    if (selector instanceof ModelSelectorSpec) {\n      if (this.toModelName === selector.model.modelName) {\n        throw new Error(\"Cannot select models in a `map()` call. If you just want the `\".concat(this._accessorName, \"` as a ref array then you can simply drop the `map()`. Otherwise make sure you're passing a field selector of the form `\").concat(this.toModelName, \".<field>` or a custom selector instead.\"));\n      } else {\n        throw new Error(\"Cannot select `\".concat(selector.model.modelName, \"` models in this `map()` call. Make sure you're passing a field selector of the form `\").concat(this.toModelName, \".<field>` or a custom selector instead.\"));\n      }\n    } else if (selector instanceof FieldSelectorSpec || selector instanceof MapSelectorSpec) {\n      if (this.toModelName !== selector.model.modelName) {\n        throw new Error(\"Cannot select fields of the `\".concat(selector.model.modelName, \"` model in this `map()` call. Make sure you're passing a field selector of the form `\").concat(this.toModelName, \".<field>` or a custom selector instead.\"));\n      }\n    } else if (!selector || typeof selector !== \"function\" || !selector.recomputations) {\n      throw new Error(\"`map()` requires a selector as an input. Received: \".concat(JSON.stringify(selector), \" of type \").concat(_typeof(selector)));\n    }\n\n    if (!(this._field instanceof ForeignKey) && !(this._field instanceof ManyToMany)) {\n      throw new Error(\"Cannot map selectors for non-collection fields\");\n    }\n\n    return new MapSelectorSpec({\n      parent: this,\n      model: this._model,\n      orm: this._orm,\n      field: this._field,\n      selector: selector\n    });\n  };\n\n  _createClass(FieldSelectorSpec, [{\n    key: \"key\",\n    get: function get() {\n      return this._accessorName;\n    }\n  }, {\n    key: \"dependencies\",\n    get: function get() {\n      return [this._orm, idArgSelector];\n    }\n  }, {\n    key: \"toModelName\",\n    get: function get() {\n      return this._field.toModelName === \"this\" ? this._fieldModel.modelName : this._field.toModelName;\n    }\n  }, {\n    key: \"toModel\",\n    get: function get() {\n      var db = this._orm.getDatabase();\n\n      return db.describe(this.toModelName);\n    }\n  }]);\n\n  return FieldSelectorSpec;\n}(ModelBasedSelectorSpec);\n\nexport { FieldSelectorSpec as default };"],"mappings":"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"},"metadata":{},"sourceType":"module"}